{"version":3,"sources":["features/form/fields/MyTextArea.js","features/form/fields/MyTextInput.js","features/form/Helpers.js","features/form/components/Geometry.js","features/form/components/Material.js","features/form/components/Layer.js","features/form/components/Spec.js","features/form/components/Coating.js","components/styles/TextStyles.js","features/form/components/Surface.js","components/styles/ColorStyles.js","components/styles/GlobalStyles.js","data/MenuData.js","components/buttons/MenuButton.js","components/tooltips/MenuTooltip.js","components/layout/Header.js","components/layout/layout.js","components/buttons/SubmitButton.js","components/buttons/Button4AddRemove.js","features/form/MainForm.js","components/cards/SidebarCard.js","features/form/Feedback.js","components/backgrounds/WaveBackground2.js","features/form/Modify.js","features/form/Track.js","features/form/components/CustomerInfo.js","components/buttons/RequestButton.js","components/animations/MockupAnimation.js","components/backgrounds/WaveBackgound.js","components/sections/HeroSection.js","Home.js","components/backgrounds/OvalBackground1.js","components/buttons/SimpleRequestButton.js","pages/errorSubmit.js","pages/successSubmit.js","pages/successModify.js","pages/successFeedback.js","App.js","index.js"],"names":["MyTextArea","label","labelClass","props","useField","field","meta","className","InputArea","touched","error","styled","textarea","MyTextInput","br","placeholder","Wrapper","Input","div","input","validateField","value","length","geometryInitialValues","geometryType","majorDiameter","minorDiameter","thickness","wedge","chamferWidth","width","sideLength","dimensionalAccuracy","numberOfSides","Geometry","geometryValues","handleChange","serviceType","blankSource","substrateSource","refUpload","useRef","useState","radius","setRadius","useFormikContext","values","geometry","useEffect","Number","validate","as","name","onChange","type","accept","e","preventDefault","file","target","files","fileType","substring","indexOf","alert","formdata","FormData","append","fetch","method","body","then","res","console","log","status","catch","ref","cols","Material","materialValues","isStock","MTARefUpload","MTAFileUpload","id","role","materialType","materialTransferAgreement","layerInitialValues","thicknessOfLayer","thicknessTolerance","material","refractiveIndex","tolerance","wavelength","Layer","sideIndex","index","layerNum","specInitialValues","wavelengthMin","wavelengthMax","polarisation","RTSelect","min","max","unit","AOImin","AOImax","Spec","specNum","coatingInitialValues","layers","specs","Coating","coatingValues","specMethod1","setSpecMethod1","handleAddLayerOrSpec","arrayHelpers","push","onClick","switchSpecMethod","map","layer","idx","pop","spec","H1","h1","H2","h2","H3","h3","BodyIntro","p","BodyMain","MediumText","Caption2","SmallText","surfaceInitialValues","descriptionOfFace","curvature","surfaceFigure","turningAngle","focalLength","radiusOfCurvature","cv","k","a1","a2","a4","a6","a8","a10","a12","formAccuracy","coating","faceType","Surface","surfaceValues","expand","setExpand","buttonText","setButtonText","hasCoating","setHasCoating","sideNumber","curvatureRefUpload","SectionWrapper","SectionTitle","DetailWrapper","rows","tex","String","raw","handleExpand","themes","text1","text2","primary","secondary","backgroundColor","card","boxShadow","backgroundColorFull","cardHover","pricingCard","modal","GlobalStyle","createGlobalStyle","MenuData","title","icon","link","MenuButton","item","to","MenuItem","src","alt","MenuTooltip","isOpen","setIsOpen","Header","Logo","MenuWrapper","HamburgerWrapper","img","Layout","children","SubmitButton","Button","Button4AddRemove","button","formInitialValues","stockSize","reactivity","toxicity","maxTemperature","hazards","specialInstructions","chemicalCompatibilityForCleaning","surface","quantity","SwitchServiceType","setValues","temp","MainForm","part","setPart","handleAddPart","resetForm","setFieldValue","validateForm","errors","Object","keys","MajorDiameter","setDefaultValues","localStorage","setItem","JSON","stringify","specialInstructionRefUpload","specialInstructionFileUpload","ContentWrapper","BackgroundBlurWrapper","initialValues","onSubmit","a","Promise","r","setTimeout","Label","side","NoticeTitle","NoticeInfoWrapper","NoticeInfo","href","NextButtonWrapper","NextButton","style","color","SidebarCard","subtitle","illustration","TextWrapper","Title","Subtitle","Illustration","postData","url","data","headers","Accept","response","Feedback","LeftSidebarWrapper","FeedbackWrapper","feedback","TextareaWrapper","SubmitInfoWrapper","WaveBackgound2","Background","Wave","top","filter","BottomWave","Modify","ordernum","Modification","createBrowserHistory","window","location","reload","FormItemWrapper","OrderNoWrapper","DescriptionWrapper","hidden","UploadButtonWrapper","UploadButton","current","click","resultData","fetchStatus","orderId","json","createTable","tableData","element","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","border","partNumber","ReactDOM","render","document","getElementById","Track","FormWrapper","InputWrapper","customerInfoInitialValues","sameAsAbove","CustomerInfo","verified","setVerified","actions","customerInfo","i","itemName","getItem","parse","handleSubmitForm","setSubmitting","isSubmitting","entries","key","endsWith","replace","fillBilling","sitekey","disabled","RequestButton","IconWrapper","Icon","Ring","MockupAnimation","WaveBackgound","HeroSection","Description","HomePage","OvalBackground1","Oval","left","right","SimpleRequestButton","ErrorSubmit","SideImageWrapper","MessageWrapper","Message","ButtonWrapper","SuccessSubmit","SuccessModify","SuccessFeedback","App","exact","path","Home","StrictMode"],"mappings":"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","file":"static/js/main.79f8e9b0.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useField } from \"formik\";\n\nexport const MyTextArea = ({ label, labelClass, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label className={labelClass}>\n        {label}\n        <br />\n        <InputArea {...field} {...props} />\n      </label>\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst InputArea = styled.textarea`\n  font-size: 15px;\n  line-height: 130%;\n  text-align: left;\n  color: rgba(255, 255, 255, 0.8);\n  /* background: transparent; */\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 12px;\n  /* get rid of input border */\n  border: 0;\n  /* no border highlight when typing */\n  outline: none;\n  max-width: 650px;\n  padding: 6px;\n  resize: none;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useField } from \"formik\";\n\nexport const MyTextInput = ({\n  label,\n  labelClass,\n  br = true,\n  placeholder,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  return (\n    <Wrapper>\n      <label className={labelClass}>\n        {label}\n        {/* <input {...field} {...props} /> */}\n\n        <Input {...field} {...props} placeholder={placeholder} />\n\n        {br && <br />}\n      </label>\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin: 10px 0;\n`;\n\nconst Input = styled.input`\n  font-size: 15px;\n  line-height: 130%;\n  text-align: left;\n  color: rgba(255, 255, 255, 0.8);\n  background: transparent;\n  /* get rid of input border */\n  border: 0;\n  /* no border highlight when typing */\n  outline: none;\n`;\n\nconst InputWrapper = styled.div``;\n","export const flattenObject = (obj) => {\n    const flattened = {}\n  \n    Object.keys(obj).forEach((key) => {\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        Object.assign(flattened, flattenObject(obj[key]))\n      } else {\n        flattened[key] = obj[key]\n      }\n    })\n    return flattened\n}\n\nexport const validateField = (value) => {\n    let error\n    if (!value || value.length === 0)\n        error = 'This is required!'\n    return error\n}","import { Field, useFormikContext } from \"formik\";\nimport React, {Fragment, useState, useEffect, useRef} from \"react\";\nimport { MyTextArea } from \"../fields/MyTextArea\";\nimport { MyTextInput } from \"../fields/MyTextInput\";\nimport { validateField } from \"../Helpers\";\n\nexport const geometryInitialValues = {\n  geometryType: \"\",\n  majorDiameter: \"\",\n  minorDiameter: \"\",\n  thickness: \"\",\n  wedge: 0,\n  chamferWidth: 0,\n  width: \"\",\n  length: \"\",\n  sideLength: \"\",\n  dimensionalAccuracy: \"\",\n  numberOfSides: \"\",\n};\n\nexport default function Geometry({\n  geometryValues,\n  handleChange,\n  blankSource,\n  substrateSource,\n  serviceType,\n}) {\n  const refUpload = useRef(null);\n\n  function geometryFileUpload(e) {\n    e.preventDefault();\n    let file = e.target.files[0];\n    let fileType = file.name.substring(\n        file.name.indexOf(\".\") + 1,\n        file.name.length\n    );\n    if (\n        fileType !== \"dxf\" &&\n        fileType !== \"stp\" &&\n        fileType !== \"stl\"\n    ) {\n      alert(\"Please upload dxf/stp/stl file\");\n      e.target.value = \"\";\n    } else {\n      const formdata = new FormData();\n      formdata.append(\"file\", file);\n      const url = \"../../api/Attachment.php\";\n      //const url = \"http://localhost:8080/comp8715/optofab-website/src/api/Attachment.php\";\n      fetch(url, {\n        method: \"POST\",\n        body: formdata\n      })\n          .then((res) => {\n            console.log(res.status);\n            alert(\"uploaded successfully\");\n          })\n          .catch(() => {\n            alert(\"upload failed\");\n          });\n    }\n  }\n\n\n  const [radius, setRadius] = useState(0);\n  const {values: {geometry: {numberOfSides, sideLength}}} = useFormikContext()\n  useEffect(() => {\n    // temporary calculation\n    setRadius(Number(numberOfSides) * Number(sideLength))\n  }, [numberOfSides, sideLength])\n\n  return (\n    <div>\n      <label className=\"required\">\n        Geometry: {\"    \"}\n        <Field\n          validate={validateField}\n          as=\"select\"\n          name=\"geometry.geometryType\"\n        >\n          <option value=\"N/A\">Please select</option>\n          <option value=\"circular/elliptical\">Circular/Elliptical</option>\n          <option value=\"rectangle\">Rectangle</option>\n          <option value=\"regular polygon\">Regular Polygon</option>\n          <option value=\"other\">Other</option>\n        </Field>\n      </label>\n      <br />\n      {geometryValues.geometryType === \"circular/elliptical\" && (\n        <Fragment>\n          <MyTextInput\n            labelClass=\"required\"\n            validate={validateField}\n            label=\"Major Diameter (mm):  \"\n            placeholder=\"enter a float number here\"\n            name=\"geometry.majorDiameter\"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            label=\"Minor Diameter (mm):\"\n            name=\"geometry.minorDiameter\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            labelClass=\"required\"\n            validate={validateField}\n            label=\"Thickness (mm):\"\n            name=\"geometry.thickness\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            label=\"Wedge (arcsecond):\"\n            name=\"geometry.wedge\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            label=\"Chamfer width (mm):\"\n            name=\"geometry.chamferWidth\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          {serviceType === 'SPDT Optic' \n                ?   \n                <p>\n                  Chamfers are assumed to be symmetric between the coated or turned face and neighbouring faces. \n                  If other chamfer types are required, please stipulate in the 'Additional Specifications' field.\n                </p> \n                :\n                <p>\n                  Chamfers are assumed to be 45 degrees to the coated or turned face.\n                  If other chamfer types are required, please stipulate in the\n                  'Additional Specifications' field.\n                </p>\n          }\n        </Fragment>\n      )}\n      {geometryValues.geometryType === \"rectangle\" && (\n        <Fragment>\n          <MyTextInput\n            labelClass=\"required\"\n            validate={validateField}\n            label=\"Width (mm):\"\n            name=\"geometry.width\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            label=\"Length (mm):\"\n            name=\"geometry.length\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            labelClass=\"required\"\n            validate={validateField}\n            label=\"Thickness (mm):\"\n            name=\"geometry.thickness\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            label=\"Wedge (arcsecond):\"\n            name=\"geometry.wedge\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            label=\"Chamfer width (mm):\"\n            name=\"geometry.chamferWidth\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          {serviceType === 'SPDT Optic' \n                ?   \n                <p>\n                  Chamfers are assumed to be symmetric between the coated or turned face and neighbouring faces. \n                  If other chamfer types are required, please stipulate in the 'Additional Specifications' field.\n                </p> \n                :\n                <p>\n                  Chamfers are assumed to be 45 degrees to the coated or turned face.\n                  If other chamfer types are required, please stipulate in the\n                  'Additional Specifications' field.\n                </p>\n          }\n        </Fragment>\n      )}\n      {geometryValues.geometryType === \"regular polygon\" && (\n        <Fragment>\n          <MyTextInput\n            labelClass=\"required\"\n            validate={validateField}\n            label=\"Number of Sides:\"\n            name=\"geometry.numberOfSides\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            labelClass=\"required\"\n            validate={validateField}\n            label=\"Side Length (mm):\"\n            name=\"geometry.sideLength\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          <p>\n            Radius: {radius}\n          </p>\n          <MyTextInput\n            labelClass=\"required\"\n            validate={validateField}\n            label=\"Thickness (mm):\"\n            name=\"geometry.thickness\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            label=\"Wedge (arcsecond):\"\n            name=\"geometry.wedge\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            label=\"Chamfer width (mm):\"\n            name=\"geometry.chamferWidth\"\n            placeholder=\"enter a float number here\"\n            onChange={handleChange}\n          />\n          {serviceType === 'SPDT Optic' \n                ?   \n                <p>\n                  Chamfers are assumed to be symmetric between the coated or turned face and neighbouring faces. \n                  If other chamfer types are required, please stipulate in the 'Additional Specifications' field.\n                </p> \n                :\n                <p>\n                  Chamfers are assumed to be 45 degrees to the coated or turned face.\n                  If other chamfer types are required, please stipulate in the\n                  'Additional Specifications' field.\n                </p>\n          }\n        </Fragment>\n      )}\n      {geometryValues.geometryType === \"other\" && (\n        <Fragment>\n          <label>please upload dxf/stp/stl files: </label>\n          <input\n              type=\"file\"\n              name=\"description\"\n              accept=\".dxf,.stp,.stl\"\n              onChange={geometryFileUpload}\n              ref={refUpload}\n          />\n          <br />\n        </Fragment>\n      )}\n      {geometryValues.geometryType !== geometryInitialValues.geometryType && (\n        <Fragment>\n          <br />\n          <MyTextArea\n            labelClass=\"required\"\n            validate={validateField}\n            label=\"Dimensional Accuracy (mm): \"\n            name=\"geometry.dimensionalAccuracy\"\n            placeholder=\"Please specify the dimensional accuracy here...\"\n            cols={80}\n            onChange={handleChange}\n          />\n          {serviceType === 'SPDT Optic' \n                ?\n            <p>\n              Our standard tolerances when machining blanks is 0.125mm. \n              <br/>\n              If tighter tolerances are required, let us know in the 'Tolerances' field below. \n              <br/>\n              Note that this refers to part geometry not surface or form of diamond turned faces.\n            </p>\n                :\n            <p>\n              Our standard tolerances on substrates are as follows. If different\n              tolerances are required, let us know in the ‘Tolerances’ field\n              below.\n              <br />\n              Optical substrates:\n              <br />\n              Diameter/Face Dimensions: ±0.15mm\n              <br />\n              Thickness: ±0.15mm\n              <br />\n              Wafers:\n              <br />\n              Diameter: +- 0.1mm\n              <br />\n              Thickness: +- 25um\n            </p>\n          }\n\n        </Fragment>\n      )}\n    </div>\n  );\n}\n","import { Field } from \"formik\";\nimport React, {Fragment, useRef} from \"react\";\nimport { MyTextInput } from \"../fields/MyTextInput\";\nimport { MyTextArea } from \"../fields/MyTextArea\";\nimport { validateField } from \"../Helpers\";\n\nexport const materialInitialValues = {\n  materialType: \"\",\n  reactivity: \"\",\n  toxicity: \"\",\n  type: \"\",\n  maxTemperature: \"\",\n  hazards: \"\",\n  specialInstructions: \"\",\n  chemicalCompatibilityForCleaning: \"\",\n  materialTransferAgreement: \"\",\n};\n\nexport default function Material({\n  serviceType,\n  handleChange,\n  materialValues,\n  isStock,\n}) {\n  const MTARefUpload = useRef(null);\n\n  function MTAFileUpload(e) {\n    e.preventDefault();\n    let file = e.target.files[0];\n    let fileType = file.name.substring(\n        file.name.indexOf(\".\") + 1,\n        file.name.length\n    );\n    if (\n        fileType !== \"png\" &&\n        fileType !== \"pdf\" &&\n        fileType !== \"PNG\" &&\n        fileType !== \"PDF\"\n    ) {\n      alert(\"Please upload PDF or PNG file\");\n      e.target.value = \"\";\n    } else {\n      const formdata = new FormData();\n      formdata.append(\"file\", file);\n      const url = \"../../api/Attachment.php\";\n      //const url = \"http://localhost:8080/comp8715/optofab-website/src/api/Attachment.php\";\n      fetch(url, {\n        method: \"POST\",\n        body: formdata\n      })\n          .then((res) => {\n            console.log(res.status);\n            alert(\"uploaded successfully\");\n          })\n          .catch(() => {\n            alert(\"upload failed\");\n          });\n    }\n  }\n  return (\n    <div>\n      <label className=\"required\">\n        Material: {\"    \"}\n        <Field\n          validate={validateField}\n          as=\"select\"\n          name=\"material.materialType\"\n          onChange={handleChange}\n        >\n          {(serviceType === \"spdt\" ||\n            (serviceType === \"optical\" && !isStock)) && (\n            <Fragment>\n              <option value=\"N/A\">Please select</option>\n              <option value=\"Aluminium\">Aluminium</option>\n              <option value=\"Nickel\">Nickel</option>\n              <option value=\"Titanium\">Titanium</option>\n              <option value=\"Copper\">Copper</option>\n              <option value=\"ZnSe\">ZnSe</option>\n              <option value=\"CaF2\">CaF2</option>\n              <option value=\"BaF2\">BaF2</option>\n              <option value=\"MgF2\">MgF2</option>\n              <option value=\"Silicon\">Silicon</option>\n              <option value=\"Germanium\">Germanium</option>\n              <option value=\"PMMA\">PMMA</option>\n              <option value=\"Polycarbonate\">Polycarbonate</option>\n              <option value=\"Vespel\">Vespel</option>\n              <option value=\"Nylon\">Nylon</option>\n              <option value=\"Delrin\">Delrin </option>\n              <option value=\"PTFE\">PTFE </option>\n              {serviceType === \"optical\" && (\n                  <>\n                    <option value=\"Silica\">Silica</option>\n                    <option value=\"other\">Other</option>\n                  </>\n              )}\n            </Fragment>\n          )}\n          {serviceType === \"optical\" && isStock && (\n            <Fragment>\n              <option value=\"N/A\">Please select</option>\n              <option value=\"ø12.7mm x 4mm DSP UVFS\">\n                ø12.7mm x 4mm DSP UVFS\n              </option>\n              <option value=\"ø25.4mm x 6mm DSP UVFS\">\n                ø25.4mm x 6mm DSP UVFS\n              </option>\n              <option value=\"ø50.8mm x 8mm DSP UVFS\">\n                ø50.8mm x 8mm DSP UVFS\n              </option>\n            </Fragment>\n          )}\n          {serviceType === \"photonic\" && (\n            <Fragment>\n              <option value=\"other\">Other</option>\n              <br />\n              <label>\n                Please describe substrate and all existing layers in special\n                instructions\n              </label>\n            </Fragment>\n          )}\n        </Field>\n      </label>\n      {serviceType === \"photonic\" && (\n        <Fragment>\n          <br />\n          <label>\n            Please describe substrate and all existing layers in special\n            instructions\n          </label>\n          <div>\n            <br />\n            <label className=\"required\">\n              Toxicity:\n              <Field\n                as=\"select\"\n                name=\"material.toxicity\"\n                onChange={handleChange}\n              >\n                <Fragment>\n                  <option value=\"N/A\">Please select</option>\n                  <option value=\"toxic\">Toxic</option>\n                  <option value=\"radioactive\">Radioactive</option>\n                  <option value=\"toxic and radioactive\">\n                    Toxic and Radioactive\n                  </option>\n                  <option value=\"non-toxic\">\n                    Non-toxic\n                  </option>\n                </Fragment>\n              </Field>\n            </label>\n            <br />\n            <MyTextInput\n              name=\"material.type\"\n              label=\"Type (e.g.BK7): \"\n              onChange={handleChange}\n            />\n            <MyTextInput\n              name=\"material.maxTemperature\"\n              label=\"Max Temperature(°C): \"\n              onChange={handleChange}\n            />\n            <MyTextArea\n              name=\"material.hazards\"\n              label=\"Hazards: \"\n              onChange={handleChange}\n            />\n            <MyTextArea\n              name=\"material.specialInstructions\"\n              label=\"Special Instructions: \"\n              onChange={handleChange}\n            />\n            <label className=\"required\" id=\"compatibility\">\n              Chemical compatibility for cleaning:\n              <span role=\"group\" aria-labelledby=\"compatibility\">\n                <label>\n                  <Field\n                    type=\"radio\"\n                    name=\"material.chemicalCompatibilityForCleaning\"\n                    value=\"yes\"\n                  />\n                  Yes\n                </label>\n                <label>\n                  <Field\n                    type=\"radio\"\n                    name=\"material.chemicalCompatibilityForCleaning\"\n                    value=\"no\"\n                  />\n                  No\n                </label>\n              </span>\n              <br />* Please tell us if any of the parts react with Liquinox\n              brand detergent, DI water, acetone, isopropanol alcohol, ethanol,\n              methanol, citranox, ultrasonic agitation. If you wish to have the\n              substrate cleaned with a special regimen, please add full details\n              to special requirements.\n            </label>\n            <br />\n            <label className=\"required\" id=\"MTA\">\n              <strong>Material Transfer Agreement: </strong>\n              <span role=\"group\" aria-labelledby=\"MTA\">\n                <label>\n                  <Field\n                    type=\"radio\"\n                    name=\"material.materialTransferAgreement\"\n                    value=\"standard\"\n                  />\n                  Standard MTA\n                </label>\n                <label>\n                  <Field\n                    type=\"radio\"\n                    name=\"material.materialTransferAgreement\"\n                    value=\"custom\"\n                  />\n                  Custom MTA (pdf only)\n                </label>\n                <label>\n                  <Field\n                    type=\"radio\"\n                    name=\"material.materialTransferAgreement\"\n                    value=\"to be agreed\"\n                  />\n                  To Be Agreed\n                </label>\n              </span>\n            </label>\n          </div>\n        </Fragment>\n      )}\n\n      {materialValues.materialType === \"other\" && serviceType === \"optical\" && (\n        <div>\n          <br />\n          <label className=\"required\">\n            Toxicity:\n            <Field as=\"select\" name=\"material.toxicity\" onChange={handleChange}>\n              <Fragment>\n                <option value=\"N/A\">Please select</option>\n                <option value=\"toxic\">Toxic</option>\n                <option value=\"radioactive\">Radioactive</option>\n                <option value=\"toxic and radioactive\">\n                  Toxic and Radioactive\n                </option>\n                <option value=\"non-toxic\">\n                  Non-toxic\n                </option>\n              </Fragment>\n            </Field>\n          </label>\n          <br />\n          <MyTextInput\n            name=\"material.type\"\n            label=\"Type (e.g.BK7): \"\n            onChange={handleChange}\n          />\n          <MyTextInput\n            name=\"material.maxTemperature\"\n            label=\"Max Temperature(°C): \"\n            onChange={handleChange}\n          />\n          <MyTextArea\n            name=\"material.hazards\"\n            label=\"Hazards: \"\n            onChange={handleChange}\n          />\n          <MyTextArea\n            name=\"material.specialInstructions\"\n            label=\"Special Instructions: \"\n            onChange={handleChange}\n          />\n          <label className=\"required\" id=\"compatibility\">\n            Chemical compatibility for cleaning:\n            <span role=\"group\" aria-labelledby=\"compatibility\">\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"material.chemicalCompatibilityForCleaning\"\n                  value=\"yes\"\n                />\n                Yes\n              </label>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"material.chemicalCompatibilityForCleaning\"\n                  value=\"no\"\n                />\n                No\n              </label>\n            </span>\n            <br />* Please tell us if any of the parts react with Liquinox brand\n            detergent, DI water, acetone, isopropanol alcohol, ethanol,\n            methanol, citranox, ultrasonic agitation. If you wish to have the\n            substrate cleaned with a special regimen, please add full details to\n            special requirements.\n          </label>\n          <br />\n          <label className=\"required\" id=\"MTA\">\n            <strong>Material Transfer Agreement: </strong>\n            <span role=\"group\" aria-labelledby=\"MTA\">\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"material.materialTransferAgreement\"\n                  value=\"standard\"\n                />\n                Standard MTA\n              </label>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"material.materialTransferAgreement\"\n                  value=\"custom\"\n                />\n                Custom MTA (pdf only)\n              </label>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"material.materialTransferAgreement\"\n                  value=\"to be agreed\"\n                />\n                To Be Agreed\n              </label>\n            </span>\n          </label>\n        </div>\n      )}\n      {materialValues.materialType === \"other\" &&\n        (serviceType === \"optical\" || serviceType === \"photonic\") &&\n        materialValues.materialTransferAgreement === \"standard\" && (\n          <Fragment>\n            <label>please upload pdf files: </label>\n            <input\n                type=\"file\"\n                name=\"description\"\n                accept=\".pdf\"\n                onChange={MTAFileUpload}\n                ref={MTARefUpload}\n            />\n            <br />\n          </Fragment>\n        )}\n      {materialValues.materialType === \"other\" &&\n        (serviceType === \"optical\" || serviceType === \"photonic\") &&\n        materialValues.materialTransferAgreement === \"custom\" && (\n          <Fragment>\n            <label>please upload pdf files: </label>\n            <input\n                type=\"file\"\n                name=\"description\"\n                accept=\".pdf\"\n                onChange={MTAFileUpload}\n                ref={MTARefUpload}\n            />\n            <br />\n          </Fragment>\n        )}\n    </div>\n  );\n}\n","import { Field } from 'formik'\nimport React from 'react'\nimport { MyTextInput } from '../fields/MyTextInput'\nimport { validateField } from '../Helpers'\n\nexport const layerInitialValues = {\n    thicknessOfLayer: '',\n    thicknessTolerance: '',\n    material: '',\n    refractiveIndex: '',\n    tolerance: '',\n    wavelength: ''\n}\n\nexport default function Layer({sideIndex, index, handleChange}) {\n    const layerNum = index + 1\n\n    return (\n        <div>\n            <h3>Layer {layerNum}</h3>\n            <MyTextInput \n                labelClass='required'\n                validate={validateField}\n                label='Thickness of Layer(nm): ' \n                name={`surface[${sideIndex}].coating.layers[${index}].thicknessOfLayer`}\n                onChange={handleChange}\n            />\n            <MyTextInput \n                labelClass='required'\n                validate={validateField}\n                label='Thickness Tolerance(nm): ' \n                name={`surface[${sideIndex}].coating.layers[${index}].thicknessTolerance`}\n                onChange={handleChange}\n            />\n            <label className='required'>\n                Material: \n                <Field \n                validate={validateField}\n                as='select' \n                name={`surface[${sideIndex}].coating.layers[${index}].material`}\n                onChange={handleChange}\n                >\n                    <option value='N/A'>Please select</option>\n                    <option value='Silica'>Silica</option>\n                    <option value='Tantala'>Tantala</option>\n                </Field>\n            </label>\n            <MyTextInput \n                label='Refractive index: ' \n                br={false}\n                name={`surface[${sideIndex}].coating.layers[${index}].refractiveIndex`}\n                onChange={handleChange}\n            />\n            <MyTextInput \n                label='±'\n                name={`surface[${sideIndex}].coating.layers[${index}].tolerance`}\n                onChange={handleChange}\n            />\n            <MyTextInput \n                label='Wavelength (nm): ' \n                name={`surface[${sideIndex}].coating.layers[${index}].wavelength`}\n                onChange={handleChange}\n            />\n        </div>\n    )\n}\n","import { Field } from 'formik'\nimport React from 'react'\nimport { validateField } from '../Helpers'\n\nexport const specInitialValues = {\n    wavelengthMin: '',\n    wavelengthMax: '',\n    polarisation: '',\n    RTSelect:'',\n    min: '',\n    max: '',\n    unit: '',\n    AOImin: '',\n    AOImax: ''\n}\n\nexport default function Spec({sideIndex, index, handleChange}) {\n\n    const specNum = index + 1\n    return (\n        <div>\n            <h3>Spec {specNum}</h3>\n            <div className=\"required\">\n                Wavelength (nm): &nbsp;&nbsp;&nbsp;\n                <label>min: <Field name={`surface[${sideIndex}].coating.specs[${index}].wavelengthMin`} validate={validateField} onChange={handleChange} /></label>\n                <label>max: <Field name={`surface[${sideIndex}].coating.specs[${index}].wavelengthMax`} validate={validateField} onChange={handleChange} /></label>\n            </div>\n            <div>\n                <label className=\"required\">\n                    <Field name={`surface[${sideIndex}].coating.specs[${index}].RTSelect`} as='select' onChange={handleChange}>\n                        <option value='N/A'>Please Select</option>\n                        <option value='Reflection'>Reflection</option>\n                        <option value='Transmission'>Transmission</option>\n                    </Field>\n                </label>\n                <label>min: <Field name={`surface[${sideIndex}].coating.specs[${index}].min`} onChange={handleChange} /></label>\n                <label>max: <Field name={`surface[${sideIndex}].coating.specs[${index}].max`} onChange={handleChange} /></label>\n                <label>\n                    <Field name={`surface[${sideIndex}].coating.specs[${index}].unit`} as='select' onChange={handleChange}>\n                        <option value='N/A'>Please Select</option>\n                        <option value='ppm'>ppm</option>\n                        <option value='%'>%</option>\n                        <option value='dB'>dB</option>\n                    </Field>\n                </label>\n            </div>\n            <label className=\"required\">\n                Polarisation:\n                <Field validate={validateField} as='select' name={`surface[${sideIndex}].coating.specs[${index}].polarisation`} onChange={handleChange} >\n                    <option value='N/A'>Please select</option>\n                    <option value='S'>S</option>\n                    <option value='P'>P</option>\n                    <option value='UNP'>UNP</option>\n                </Field>\n            </label>\n            <div className=\"required\">\n                Angle of Incidence (degree): &nbsp;&nbsp;&nbsp;\n                <label>min: <Field validate={validateField} name={`surface[${sideIndex}].coating.specs[${index}].AOImin`} onChange={handleChange} /></label>\n                <label>max: <Field validate={validateField} name={`surface[${sideIndex}].coating.specs[${index}].AOImax`} onChange={handleChange} /></label>\n            </div>\n        </div>\n    )\n}\n","import { Field, FieldArray } from 'formik'\nimport React, { useState } from 'react'\nimport { MyTextArea } from '../fields/MyTextArea'\nimport { MyTextInput } from '../fields/MyTextInput'\nimport Layer, { layerInitialValues } from './Layer'\nimport Spec, { specInitialValues } from './Spec'\n\nexport const coatingInitialValues = {\n    layers: [{...layerInitialValues}],\n    specs: [{ ...specInitialValues}]\n}\n\nexport default function Coating({coatingValues, handleChange, index, serviceType}) {\n    \n    // method1: index/thickness method2: transmission/reflection\n    const [specMethod1, setSpecMethod1] = useState(serviceType==='Photonic Coating'?true:false)\n\n    const switchSpecMethod = (e) => {\n        e.preventDefault()\n        setSpecMethod1(!specMethod1)\n    }\n    const handleAddLayerOrSpec = (e, arrayHelpers) => {\n        e.preventDefault()\n        specMethod1 ? arrayHelpers.push({ ...layerInitialValues}) : arrayHelpers.push({ ...specInitialValues})\n    }\n\n    return (\n        <div>\n            <label>\n                Coating specification method: {specMethod1 ? 'Index/thickness' : 'Transmission/reflection'}\n                <button onClick={e => switchSpecMethod(e)}>Switch</button>\n            </label>\n            {specMethod1 ? (\n                <FieldArray\n                    name={`surface.${index}.coating.layers`}\n                >\n                    {arrayHelpers => (\n                        <div>\n                            {coatingValues.layers.map((layer, idx) => (\n                                <Layer key={idx} sideIndex={index} index={idx} handleChange={handleChange} />\n                            ))}\n                            <button type='button' onClick={(e) => handleAddLayerOrSpec(e, arrayHelpers)}>Add a layer</button>\n                            <button type='button' onClick={arrayHelpers.pop}>Remove last layer</button>\n                        </div>\n                    )}\n                </FieldArray>\n            ) : (\n                <FieldArray\n                    name={`surface.${index}.coating.specs`}\n                >   \n                    {arrayHelpers => (\n                        <div>\n                            {coatingValues.specs.map((spec, idx) => (\n                                <Spec key={idx} sideIndex={index} index={idx} handleChange={handleChange} />\n                            ))}\n                            <button type='button' onClick={(e) => handleAddLayerOrSpec(e, arrayHelpers)}>Add a spec</button>\n                            <button type='button' onClick={arrayHelpers.pop}>Remove last spec</button>\n                        </div>\n                    )}\n                </FieldArray>\n            )}\n            <MyTextInput label='Coated Area Dimension: ' name={`surface[${index}].coating.coatedAreaDimension`} onChange={handleChange} />\n            <MyTextInput label='Position: ' name={`surface[${index}].coating.position`} onChange={handleChange} />\n            <MyTextArea label='Compensation Coating: ' name={`surface[${index}].coating.compensationCoating`} onChange={handleChange} />\n            <MyTextArea label='Protective Coating: ' name={`surface[${index}].coating.protectiveCoating`} onChange={handleChange} />\n            <MyTextArea label='Add Specification: ' name={`surface[${index}].coating.addSpecification`} onChange={handleChange} />\n            <label>\n                Deposition Process:\n                <Field as='select' name={`surface[${index}].coating.depositionProcess`} onChange={handleChange}>\n                    <option value=\"N/A\">Please select</option>\n                    <option value=\"lowTempLowStress\">Low Temperature + Low Stress</option>\n                    <option value=\"highTempLowLoss\">High Temperature + Low Loss</option>\n                </Field>\n            </label>\n        </div>\n    )\n}\n","import styled from \"styled-components\"\n\n// look it up in the figma file here: https://www.figma.com/file/ol7ZmeiJ24GHMqA7N7IebW/OptoFab?node-id=1%3A4\nexport const H1 = styled.h1`\n  font-weight: bold;\n  font-size: 60px;\n\n  /* for mobile devices according to Figma */\n  @media (max-width: 450px) {\n    font-size: 34px;\n  }\n`\n\nexport const H2 = styled.h2`\n  font-weight: bold;\n  font-size: 40px;\n\n  @media (max-width: 450px) {\n    font-size: 28px;\n  }\n`\n\nexport const H3 = styled.h3`\n  font-weight: bold;\n  font-size: 30px;\n\n  @media (max-width: 450px) {\n    font-size: 24px;\n  }\n`\n\nexport const BodyIntro = styled.p`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 130%;\n`\n\nexport const BodyMain = styled.p`\n  font-weight: normal;\n  font-size: 20px;\n  line-height: 140%;\n`\n\nexport const MediumText = styled.p`\n  font-weight: normal;\n  font-size: 17px;\n  line-height: 130%;\n`\n\nexport const Caption = styled.p`\n  font-weight: normal;\n  font-size: 15px;\n  line-height: 19.5px;\n`\n\nexport const Caption2 = styled.p`\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 130%;\n  text-transform: uppercase;\n`\n\nexport const SmallText = styled.p`\n  font-weight: normal;\n  font-size: 13px;\n  line-height: 130%;\n`\n\nexport const SmallText2 = styled.p`\n  font-weight: 600;\n  font-size: 13px;\n  line-height: 130%;\n  text-transform: uppercase;\n`\n","import { Field } from \"formik\";\nimport React, {Fragment, useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport { MyTextArea } from \"../fields/MyTextArea.js\";\nimport { MyTextInput } from \"../fields/MyTextInput.js\";\nimport Coating, { coatingInitialValues } from \"./Coating.js\";\nimport { MathComponent } from \"mathjax-react\";\nimport { validateField } from \"../Helpers.js\";\nimport { H3 } from \"../../../components/styles/TextStyles\";\n\nexport const surfaceInitialValues = {\n  descriptionOfFace: \"\",\n  curvature: \"\",\n  surfaceFigure: \"\",\n  turningAngle: 90,\n  focalLength: \"\",\n  radiusOfCurvature: \"\",\n  cv: \"\",\n  k: \"\",\n  a1: \"\",\n  a2: \"\",\n  a4: \"\",\n  a6: \"\",\n  a8: \"\",\n  a10: \"\",\n  a12: \"\",\n  formAccuracy: \"\",\n  coating: coatingInitialValues,\n  faceType: \"\",\n};\n\nexport default function Surface({\n  handleChange,\n  index,\n  surfaceValues,\n  blankSource,\n  serviceType,\n  substrateSource,\n  geometry,\n}) {\n  const [expand, setExpand] = useState(false);\n  const [buttonText, setButtonText] = useState(\"show more\");\n  const [hasCoating, setHasCoating] = useState(false);\n  const sideNumber = index + 1;\n\n  const curvatureRefUpload = useRef(null);\n\n  function curvatureFileUpload(e) {\n    e.preventDefault();\n    let file = e.target.files[0];\n    let fileType = file.name.substring(\n        file.name.indexOf(\".\") + 1,\n        file.name.length\n    );\n    if (\n        fileType !== \"stp\" &&\n        fileType !== \"spd\" &&\n        fileType !== \"zmx\"\n    ) {\n      alert(\"Please upload stp/spd/zmx file\");\n      e.target.value = \"\";\n    } else {\n      const formdata = new FormData();\n      formdata.append(\"file\", file);\n      const url = \"../../api/Attachment.php\";\n      //const url = \"http://localhost:8080/comp8715/optofab-website/src/api/Attachment.php\";\n      fetch(url, {\n        method: \"POST\",\n        body: formdata\n      })\n          .then((res) => {\n            console.log(res.status);\n            alert(\"uploaded successfully\");\n          })\n          .catch(() => {\n            alert(\"upload failed\");\n          });\n    }\n  }\n\n  const handleExpand = (e) => {\n    e.preventDefault();\n    setExpand(!expand);\n    !expand ? setButtonText(\"show less\") : setButtonText(\"show more\");\n  };\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div>\n      <SectionWrapper>\n        <SectionTitle>Side {sideNumber}</SectionTitle>\n        <DetailWrapper>\n          <MyTextArea\n            labelClass=\"required\"\n            validate={validateField}\n            label=\"Description Of Face:\"\n            name={`surface.${index}.descriptionOfFace`}\n            placeholder=\"Leave the description here\"\n            rows={3}\n            onChange={handleChange}\n          />\n          {geometry === \"regular polygon\" && (\n            <label>\n              <Field as=\"select\" name={`surface.${index}.descriptionOfFace`}>\n                <option value=\"N/A\">Please select</option>\n                <option value=\"Polygonal face\">Polygonal face</option>\n                <option value=\"Extruded face\">Extruded face</option>\n              </Field>\n              <br />\n            </label>\n          )}\n\n          <label className=\"required\">\n            Curvature:\n            <Field\n              validate={validateField}\n              as=\"select\"\n              name={`surface.${index}.curvature`}\n              onChange={handleChange}\n            >\n              <option value=\"N/A\">Please select</option>\n              <option value=\"flat\">Flat</option>\n              <option value=\"parabolic\">Parabolic</option>\n              <option value=\"spherical\">Spherical</option>\n              <option value=\"aspheric\">Aspheric</option>\n              <option value=\"other\">Other</option>\n            </Field>\n          </label>\n          <br />\n          {surfaceValues.curvature === \"flat\" && (\n            <Fragment>\n              <MyTextInput\n                label=\"Surface Figure (nm): ±\"\n                name={`surface.${index}.surfaceFigure`}\n                onChange={handleChange}\n              />\n              <MyTextInput\n                label=\"Surface Roughness (P-V nm): \"\n                name={`surface.${index}.surfaceRoughness`}\n                onChange={handleChange}\n              />\n              <label>\n                Surface Quality (Scratch-Dig):\n                <Field\n                  as=\"select\"\n                  name={`surface.${index}.surfaceQuality`}\n                  onChange={handleChange}\n                >\n                  <option value=\"N/A\">Please select</option>\n                  <option value=\"40-20\">40-20</option>\n                  <option value=\"20-10\">20-10</option>\n                  <option value=\"10-5\">10-5</option>\n                </Field>\n              </label>\n              <p>\n                Surface Figure: Maximum deviation (figure error) of the optical\n                surface from the specified shape across the clear aperture, in\n                units of λ/N, where λ=632.8nm\n                <br />\n                <br />\n                Surface Quality: Describes the number & severity of surface\n                defects/imperfections within the clear aperture using the\n                Scratch/Dig standard following ISO 10110-7\n                <br />\n                <br />\n                Surface Roughness: Root mean square variation of the optical\n                surface with respect to the specified shape across the clear\n                aperture\n              </p>\n            </Fragment>\n          )}\n          {surfaceValues.curvature === \"parabolic\" && (\n            <Fragment>\n              <p>\n                Please specify the beam dimension in Description of Face\n              </p>\n              <MyTextInput\n                labelClass=\"required\"\n                validate={validateField}\n                label=\"Focal Length (mm): \"\n                name={`surface.${index}.focalLength`}\n                onChange={handleChange}\n              />\n              <MyTextInput\n                label=\"Turning Angle (degree): \"\n                name={`surface.${index}.turningAngle`}\n                onChange={handleChange}\n              />\n              <MyTextInput\n                label=\"Surface Figure (nm): ±\"\n                name={`surface.${index}.surfaceFigure`}\n                onChange={handleChange}\n              />\n              <MyTextInput\n                label=\"Surface Roughness (P-V nm): \"\n                name={`surface.${index}.surfaceRoughness`}\n                onChange={handleChange}\n              />\n              <label>\n                Surface Quality (Scratch-Dig):\n                <Field\n                  as=\"select\"\n                  name={`surface.${index}.surfaceQuality`}\n                  onChange={handleChange}\n                >\n                  <option value=\"N/A\">Please select</option>\n                  <option value=\"40-20\">40-20</option>\n                  <option value=\"20-10\">20-10</option>\n                  <option value=\"10-5\">10-5</option>\n                </Field>\n              </label>\n              <p>\n                Surface Figure: Maximum deviation (figure error) of the optical\n                surface from the specified shape across the clear aperture, in\n                units of λ/N, where λ=632.8nm\n                <br />\n                <br />\n                Surface Quality: Describes the number & severity of surface\n                defects/imperfections within the clear aperture using the\n                Scratch/Dig standard following ISO 10110-7\n                <br />\n                <br />\n                Surface Roughness: Root mean square variation of the optical\n                surface with respect to the specified shape across the clear\n                aperture\n              </p>\n            </Fragment>\n          )}\n          {surfaceValues.curvature === \"spherical\" && (\n            <Fragment>\n              <MyTextInput\n                labelClass=\"required\"\n                validate={validateField}\n                label=\"Radius of Curvature(mm): \"\n                name={`surface.${index}.radiusOfCurvature`}\n                onChange={handleChange}\n              />\n              <MyTextInput\n                label=\"Surface Figure (nm): ±\"\n                name={`surface.${index}.surfaceFigure`}\n                onChange={handleChange}\n              />\n              <MyTextInput\n                label=\"Surface Roughness (P-V nm): \"\n                name={`surface.${index}.surfaceRoughness`}\n                onChange={handleChange}\n              />\n              <label>\n                Surface Quality (Scratch-Dig):\n                <Field\n                  as=\"select\"\n                  name={`surface.${index}.surfaceQuality`}\n                  onChange={handleChange}\n                >\n                  <option value=\"N/A\">Please select</option>\n                  <option value=\"40-20\">40-20</option>\n                  <option value=\"20-10\">20-10</option>\n                  <option value=\"10-5\">10-5</option>\n                </Field>\n              </label>\n              <p>\n                Surface Figure: Maximum deviation (figure error) of the optical\n                surface from the specified shape across the clear aperture, in\n                units of λ/N, where λ=632.8nm\n                <br />\n                <br />\n                Surface Quality: Describes the number & severity of surface\n                defects/imperfections within the clear aperture using the\n                Scratch/Dig standard following ISO 10110-7\n                <br />\n                <br />\n                Surface Roughness: Root mean square variation of the optical\n                surface with respect to the specified shape across the clear\n                aperture\n              </p>\n            </Fragment>\n          )}\n          {surfaceValues.curvature === \"aspheric\" && (\n            <Fragment>\n              Surface Form:\n              <MathComponent\n                tex={String.raw`Z=f(x)=\\frac{C_{v}x^2}{1+\\sqrt{1-(1+k)C_{v}^2x^2}}+A_{01}x+A_{02}x^2+\\cdots`}\n              />\n              <MyTextInput\n                labelClass=\"required\"\n                validate={validateField}\n                label=\"Cv: \"\n                name={`surface.${index}.cv`}\n                onChange={handleChange}\n              />\n              <MyTextInput\n                labelClass=\"required\"\n                validate={validateField}\n                label=\"k: \"\n                name={`surface.${index}.k`}\n                onChange={handleChange}\n              />\n              <MyTextInput\n                label=\"A1: \"\n                name={`surface.${index}.a1`}\n                onChange={handleChange}\n              />\n              <MyTextInput\n                labelClass=\"required\"\n                validate={validateField}\n                label=\"A2: \"\n                name={`surface.${index}.a2`}\n                onChange={handleChange}\n              />\n              <button onClick={(e) => handleExpand(e)}>{buttonText}</button>\n              <br />\n              {expand && (\n                <Fragment>\n                  <MyTextInput\n                    label=\"A4: \"\n                    name={`surface.${index}.a4`}\n                    onChange={handleChange}\n                  />\n                  <MyTextInput\n                    label=\"A6: \"\n                    name={`surface.${index}.a6`}\n                    onChange={handleChange}\n                  />\n                  <MyTextInput\n                    label=\"A8: \"\n                    name={`surface.${index}.a8`}\n                    onChange={handleChange}\n                  />\n                  <MyTextInput\n                    label=\"A10: \"\n                    name={`surface.${index}.a10`}\n                    onChange={handleChange}\n                  />\n                  <MyTextInput\n                    label=\"A12: \"\n                    name={`surface.${index}.a12`}\n                    onChange={handleChange}\n                  />\n                </Fragment>\n              )}\n              <MyTextInput\n                label=\"Surface Figure (nm): ±\"\n                name={`surface.${index}.surfaceFigure`}\n                onChange={handleChange}\n              />\n              <MyTextInput\n                label=\"Surface Roughness (P-V nm): \"\n                name={`surface.${index}.surfaceRoughness`}\n                onChange={handleChange}\n              />\n              <label>\n                Surface Quality (Scratch-Dig):\n                <Field\n                  as=\"select\"\n                  name={`surface.${index}.surfaceQuality`}\n                  onChange={handleChange}\n                >\n                  <option value=\"N/A\">Please select</option>\n                  <option value=\"40-20\">40-20</option>\n                  <option value=\"20-10\">20-10</option>\n                  <option value=\"10-5\">10-5</option>\n                </Field>\n              </label>\n              <p>\n                Surface Figure: Maximum deviation (figure error) of the optical\n                surface from the specified shape across the clear aperture, in\n                units of λ/N, where λ=632.8nm\n                <br />\n                <br />\n                Surface Quality: Describes the number & severity of surface\n                defects/imperfections within the clear aperture using the\n                Scratch/Dig standard following ISO 10110-7\n                <br />\n                <br />\n                Surface Roughness: Root mean square variation of the optical\n                surface with respect to the specified shape across the clear\n                aperture\n              </p>\n            </Fragment>\n          )}\n          {surfaceValues.curvature === \"other\" && (\n            <Fragment>\n              <label>Upload Zemax/Winlens File:</label>\n              <input type=\"file\" name=\"curvatureFile\" accept=\".zmx,.spd,.stp\" onChange={curvatureFileUpload}\n                     ref={curvatureRefUpload} />\n              <MyTextInput\n                label=\"Surface Figure (nm): ±\"\n                name={`surface.${index}.surfaceFigure`}\n                onChange={handleChange}\n              />\n              <MyTextInput\n                label=\"Surface Roughness (nm rms): \"\n                name={`surface.${index}.surfaceRoughness`}\n                onChange={handleChange}\n              />\n              <label>\n                Surface Quality:\n                <Field\n                  as=\"select\"\n                  name={`surface.${index}.surfaceQuality`}\n                  onChange={handleChange}\n                >\n                  <option value=\"N/A\">Please select</option>\n                  <option value=\"40-20\">40-20</option>\n                  <option value=\"20-10\">20-10</option>\n                  <option value=\"10-5\">10-5</option>\n                </Field>\n              </label>\n              <p>\n                Surface Figure: Maximum deviation (figure error) of the optical\n                surface from the specified shape across the clear aperture, in\n                units of λ/N, where λ=632.8nm\n                <br />\n                <br />\n                Surface Quality: Describes the number & severity of surface\n                defects/imperfections within the clear aperture using the\n                Scratch/Dig standard following ISO 10110-7\n                <br />\n                <br />\n                Surface Roughness: Root mean square variation of the optical\n                surface with respect to the specified shape across the clear\n                aperture\n              </p>\n            </Fragment>\n          )}\n          <br />\n          <button type=\"button\" onClick={() => setHasCoating(!hasCoating)}>\n            Add Coating\n          </button>\n          {hasCoating && (\n            <Coating\n              coatingValues={surfaceValues.coating}\n              handleChange={handleChange}\n              index={index}\n              serviceType={serviceType}\n            />\n          )}\n        </DetailWrapper>\n      </SectionWrapper>\n    </div>\n  );\n}\n\nconst SectionWrapper = styled.div`\n  display: grid;\n  grid-template-columns: minmax(210px, 250px) auto;\n`;\n\nconst SectionTitle = styled(H3)`\n  margin: 10px;\n  color: rgba(255, 255, 255, 0.9);\n  text-shadow: 0px 10px 20px rgba(0, 0, 0, 0.4);\n`;\n\nconst DetailWrapper = styled.div`\n  margin: 20px;\n`;\n","export const themes = {\n  light: {\n    text1: `black`,\n    text2: `rgba(0,0,0,0.7)`,\n    primary: `#BE1E69`,\n    secondary: \"#2FB5FC\",\n    backgroundColor: `#f2f6ff`,\n    card: {\n      backgroundColor: `rgba(255, 255, 255, 0.6)`,\n      // note: use inset 0 0 0 0.5px to set line width to achieve .5px;\n      // vs. normally setting to .5px width will round up to 1px;\n      boxShadow: `0px 50px 100px rgba(34, 79, 169, 0.3),\n            inset 0 0 0 0.5px rgba(255, 255, 255, 0.6)`,\n      backgroundColorFull: `rgba(255, 255, 255, 1)`,\n    },\n    cardHover: {\n      backgroundColor: `rgba(68, 66, 178, 0.1)`,\n      boxShadow: `inset 0px 0px 0px 0.5px rgba(68, 66, 178, 0.2)`,\n    },\n    pricingCard: {\n      backgroundColor: `rgba(255, 255, 255, 0.3)`,\n    },\n    status: {\n      backgroundColor: \"rgba(68, 66, 178, 0.1)\",\n    },\n    modal: {\n      backgroundColor: `rgba(255, 255, 255, 0.6)`,\n      boxShadow: `0px 50px 100px rgba(34, 79, 169, 0.3),\n            inset 0 0 0 0.5px rgba(255, 255, 255, 0.6)`,\n      backgroundColorFull: `rgba(255, 255, 255, 1)`,\n    },\n  },\n  dark: {\n    text1: `white`,\n    text2: `rgba(255,255,255,0.7)`,\n    backgroundColor: `#1F1F47`,\n    card: {\n      backgroundColor: `rgba(25, 24, 63, 0.98)`,\n      boxShadow: `0px 30px 60px rgba(0, 0, 0, 0.25),\n            inset 0 0 0 0.5px rgba(255, 255, 255, 0.2)`,\n      backgroundColorFull: `rgba(15, 14, 71, 1)`,\n    },\n    cardHover: {\n      backgroundColor: `rgba(255, 255, 255, 0.1)`,\n      boxShadow: `inset 0px 0px 0px 0.5px rgba(255, 255, 255, 0.2)`,\n    },\n    pricingCard: {\n      backgroundColor: `rgba(31, 31, 71, 0.6)`,\n    },\n    status: {\n      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n    },\n    modal: {\n      backgroundColor: `rgba(50, 61, 109, 0.5)`,\n      boxShadow: `0px 50px 100px rgba(0, 0, 0, 0.25),\n            inset 0 0 0 0.5px rgba(255, 255, 255, 0.3)`,\n      backgroundColorFull: `rgba(15, 14, 71, 1)`,\n    },\n  },\n}\n","import { createGlobalStyle } from \"styled-components\"\nimport { themes } from \"./ColorStyles\"\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n      background: ${themes.light.backgroundColor};\n\n      /* change according to system dark mode */\n      @media (prefers-color-scheme: dark) {\n          background: ${themes.dark.backgroundColor};\n      }\n  }\n`\n","export const MenuData = [\n  { title: \"Home\", icon: \"/images/smallicons/home.svg\", link: \"/\" },\n  {\n    title: \"Request a Part\",\n    icon: \"/images/smallicons/book.svg\",\n    link: \"/request\",\n  },\n  {\n    title: \"Track Order\",\n    icon: \"/images/smallicons/code.svg\",\n    link: \"/track\",\n  },\n  {\n    title: \"Modify Order\",\n    icon: \"/images/smallicons/pen.svg\",\n    link: \"/modify\",\n  },\n  {\n    title: \"Feedback\",\n    icon: \"/images/smallicons/team.svg\",\n    link: \"/feedback\",\n  },\n];\n\nexport const tooltipData = [\n  {\n    title: \"Feedback\",\n    icon: \"/images/smallicons/team.svg\",\n    link: \"/feedback\",\n  },\n];\n","import { NavLink } from \"react-router-dom\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nfunction MenuButton(props) {\n  const { item } = props;\n  return (\n    <NavLink to={item.link}>\n      <MenuItem title={item.title}>\n        <img src={item.icon} alt={item.title} />\n        {item.title}\n      </MenuItem>\n    </NavLink>\n  );\n}\n\nexport default MenuButton;\n\nconst MenuItem = styled.div`\n  color: rgba(255, 255, 255, 0.9);\n  display: grid;\n  /* 24px for icon */\n  grid-template-columns: 24px auto;\n  /* if there's only icon, show no gap */\n  gap: ${(props) => (props.title ? \"10px\" : \"0px\")};\n  /* align items (icon and title) vertically */\n  align-items: center;\n  padding: 10px;\n  /* apply transition to background */\n  transition: 0.5s ease-in-out;\n  border-radius: 10px;\n\n  :hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.1),\n      inset 0 0 0 0.5px rgba(255, 255, 255, 0.2);\n  }\n`;\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\n\n// for future tooltips, e.g. personal info/account\nfunction MenuTooltip() {\n  const [isOpen, setIsOpen] = useState(false)\n  return (\n    <Wrapper isOpen={isOpen} onClick={() => setIsOpen(!isOpen)}>\n      {}\n    </Wrapper>\n  )\n}\n\nexport default MenuTooltip\n\nconst Wrapper = styled.div`\n  /* \n  background:\n  box-shadow:\n  backdrop-filter:\n\n  border-radius:\n  padding:\n  position: absolute;\n  top: 60px;\n  right: 30px;\n  opacity: ${props => (props.isOpen ? 1 : 0.5)};\n  z-index:\n  display: grid;\n  gap: 10px;\n  grid-template-columns: \n */\n`\n","import { NavLink } from \"react-router-dom\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { MenuData } from \"../../data/MenuData\";\nimport MenuButton from \"../buttons/MenuButton\";\nimport MenuTooltip from \"../tooltips/MenuTooltip\";\n\nexport default function Header() {\n  return (\n    <Wrapper>\n      {/* add home link to logo */}\n      <NavLink to=\"/\">\n        <Logo\n          // src={process.env.PUBLIC_URL + \"/images/logos/ANFFlogoFull.svg\"}\n          src={\"/images/logos/ANFFlogoFull.svg\"}\n          alt=\"logo\"\n        />\n      </NavLink>\n      <MenuWrapper>\n        {MenuData.map((item, index) => (\n          // every list map should have a key\n          <MenuButton item={item} key={index} />\n        ))}\n        <HamburgerWrapper>\n          <MenuButton\n            item={{\n              title: \"\",\n              icon: \"/images/smallicons/hamburger.svg\",\n              link: \"\",\n            }}\n          />\n        </HamburgerWrapper>\n      </MenuWrapper>\n      <MenuTooltip />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  /* absolute to parent (root in this case) */\n  position: absolute;\n  top: 50px;\n  display: grid;\n  /* first 45px is for logo */\n  grid-template-columns: 45px auto;\n  /* set width to take up whole space */\n  width: 100%;\n  /* space-between has no left/right (far-ends) space, vs space-around. see css-tricks.com */\n  justify-content: space-between;\n  padding: 0 30px;\n  /* vertical center items */\n  align-items: center;\n\n  @media (max-width: 768px) {\n    top: 30px;\n  }\n  @media (max-width: 450px) {\n    top: 20px;\n    padding: 0 20px;\n  }\n`;\n\nconst MenuWrapper = styled.div`\n  display: grid;\n  gap: 30px;\n  /* use repeat function wrt MenuData array length */\n  grid-template-columns: repeat(${MenuData.length}, auto);\n  /* also vertical center menu links */\n  align-items: center;\n\n  @media (max-width: 768px) {\n    /* \">\" selects all links 'a' tag of immediate children: the MenuButton has a, but not the Hamburger */\n    > a {\n      display: none;\n    }\n    /* for only one hamburger menu */\n    grid-template-columns: auto;\n  }\n`;\n\nconst Logo = styled.img`\n  width: 44px;\n  height: 61.84px;\n  left: 0px;\n  top: 0px;\n\n  /* drop shadow combo 1 */\n\n  filter: drop-shadow(0px 20px 40px rgba(0, 0, 0, 0.15));\n  backdrop-filter: blur(40px);\n  /* Note: backdrop-filter has minimal browser support */\n`;\n\nconst HamburgerWrapper = styled.div`\n  display: none;\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n","import React from \"react\"\nimport \"./layout.css\"\nimport { GlobalStyle } from \"../styles/GlobalStyles\"\nimport Header from \"./Header\"\n\nfunction Layout({ children }) {\n  return (\n    <>\n      <GlobalStyle />\n      <Header />\n      <main>{children}</main>\n    </>\n  )\n}\n\nexport default Layout\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SubmitButton = (props) => {\n  const { title } = props;\n  return (\n    <>\n      <Button type=\"submit\" value={title} />\n    </>\n  );\n};\n\nexport default SubmitButton;\n\nconst Button = styled.input`\n  /* display: block; */\n  margin: 10px;\n  padding: 12px 24px;\n\n  /* position: static; */\n  width: minmax(200px, 360px);\n  height: 44px;\n\n  background: linear-gradient(270deg, #d90068 0%, rgba(0, 28, 129, 0.9) 100%);\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n  backdrop-filter: blur(40px);\n  /* Note: backdrop-filter has minimal browser support */\n\n  border-radius: 30px;\n  border: none;\n\n  color: white;\n  font-weight: bold;\n  font-family: Segoe UI, sans-serif;\n\n  & {\n    transition: 0.3s cubic-bezier(0.455, 0.03, 0.515, 0.955);\n    transition-delay: 0.1s;\n  }\n\n  :hover {\n    filter: hue-rotate(10deg) brightness(110%) saturate(110%);\n    box-shadow: 0px 30px 60px rgba(0, 0, 0, 0.3);\n    cursor: pointer;\n    transform: scale(1.05);\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button4AddRemove = (props) => {\n  return (\n    <Button type=\"button\" onClick={props.onClick}>\n      {props.title}\n    </Button>\n  );\n};\n\nexport default Button4AddRemove;\n\nconst Button = styled.button`\n  max-width: 200px;\n  height: 33px;\n  margin: 0px 30px 0 0;\n\n  background: linear-gradient(\n    180deg,\n    rgba(24, 32, 79, 0.4) 0%,\n    rgba(24, 32, 79, 0.25) 100%\n  );\n  border: 0.5px solid rgba(0, 0, 0, 0.3);\n  box-sizing: border-box;\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.1);\n  /* backdrop-filter: blur(40px); */\n  /* Note: backdrop-filter has minimal browser support */\n\n  border-radius: 30px;\n\n  font-size: 15px;\n  line-height: 130%;\n  text-align: center;\n  color: rgba(255, 255, 255, 0.7);\n  /* background: transparent; */\n  padding: 0px 20px;\n\n  & {\n    transition: 0.2s cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  }\n\n  :hover {\n    /* filter: hue-rotate(10deg) brightness(150%) saturate(150%); */\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.3);\n    cursor: pointer;\n    transform: scale(1.02);\n    color: rgba(255, 255, 255, 0.95);\n  }\n`;\n","import { Formik, Form, Field, FieldArray, useFormikContext } from \"formik\";\nimport React, {Fragment, useEffect, useRef} from \"react\";\nimport styled from \"styled-components\";\nimport Geometry, { geometryInitialValues } from \"./components/Geometry\";\nimport Material, { materialInitialValues } from \"./components/Material\";\nimport Surface, { surfaceInitialValues } from \"./components/Surface\";\nimport { MyTextInput } from \"./fields/MyTextInput\";\nimport { MyTextArea } from \"./fields/MyTextArea\";\nimport { Link } from \"react-router-dom\";\nimport { validateField } from \"./Helpers\";\nimport Layout from \"../../components/layout/layout\";\nimport {\n  BodyIntro,\n  BodyMain,\n  Caption2,\n  H3,\n} from \"../../components/styles/TextStyles\";\nimport SubmitButton from \"../../components/buttons/SubmitButton\";\nimport Button4AddRemove from \"../../components/buttons/Button4AddRemove\";\n\nexport const formInitialValues = {\n  serviceType: \"\",\n  blankSource: \"\",\n  substrateSource: \"\",\n  stockSize: \"\",\n  material: materialInitialValues,\n  geometry: geometryInitialValues,\n  surface: [surfaceInitialValues],\n  quantity: \"\",\n  specialInstructions: \"\",\n};\n\nconst SwitchServiceType = () => {\n  const { values, setValues } = useFormikContext();\n\n  useEffect(() => {\n    const temp = values.serviceType;\n    setValues({ ...formInitialValues, serviceType: temp }, false);\n  }, [values.serviceType, setValues]);\n\n  return null;\n};\n\nconst setDefaultValues = (setFieldValue, values) => {\n  if (values.geometry.minorDiameter === \"\") {\n    setFieldValue(\"geometry.minorDiameter\", values.geometry.MajorDiameter);\n  }\n};\n\nexport default function MainForm({ part, setPart }) {\n  function handleAddPart(e, values, resetForm, setFieldValue, validateForm) {\n    e.preventDefault();\n\n    validateForm().then((errors) => {\n      console.log(errors);\n      if (Object.keys(errors).length === 0) {\n        setDefaultValues(setFieldValue, values);\n        localStorage.setItem(`part${part}`, JSON.stringify(values));\n        setPart(part + 1);\n        resetForm();\n      }\n    });\n  }\n\n  const specialInstructionRefUpload = useRef(null);\n\n  function specialInstructionFileUpload(e) {\n    e.preventDefault();\n    let file = e.target.files[0];\n    let fileType = file.name.substring(\n        file.name.indexOf(\".\") + 1,\n        file.name.length\n    );\n    if (\n        fileType !== \"png\" &&\n        fileType !== \"pdf\" &&\n        fileType !== \"PNG\" &&\n        fileType !== \"PDF\"\n    ) {\n      alert(\"Please upload PDF or PNG file\");\n      e.target.value = \"\";\n    } else {\n      const formdata = new FormData();\n      formdata.append(\"file\", file);\n      const url =\n          \"../api/Attachment.php\";\n      fetch(url, {\n        method: \"POST\",\n        body: formdata\n      })\n          .then((res) => {\n            console.log(res.status);\n            alert(\"uploaded successfully\");\n          })\n          .catch(() => {\n            alert(\"upload failed\");\n          });\n    }\n  }\n\n\n  return (\n    <Layout>\n      <Wrapper>\n        <ContentWrapper>\n          <BackgroundBlurWrapper>\n            <Fragment>\n              <Formik\n                initialValues={formInitialValues}\n                onSubmit={async (values) => {\n                  console.log(values);\n                  await new Promise((r) => setTimeout(r, 500));\n                  alert(JSON.stringify(values, null, 2));\n                }}\n              >\n                {({\n                  values,\n                  setFieldValue,\n                  validateForm,\n                  handleChange,\n                  resetForm,\n                  errors,\n                }) => (\n                  <Form>\n                    <SwitchServiceType />\n                    <SectionWrapper>\n                      <SectionTitle id=\"service-type\">\n                        Service Type\n                      </SectionTitle>\n                      <DetailWrapper>\n                        <div role=\"group\" aria-labelledby=\"service-type\">\n                          <Label>\n                            <Field\n                              type=\"radio\"\n                              name=\"serviceType\"\n                              value=\"SPDT Optic\"\n                            />\n                            SPDT Optic\n                          </Label>\n                          <Label>\n                            <Field\n                              type=\"radio\"\n                              name=\"serviceType\"\n                              value=\"Optical Coating\"\n                            />\n                            Optical Coating\n                          </Label>\n                          <Label>\n                            <Field\n                              type=\"radio\"\n                              name=\"serviceType\"\n                              value=\"Photonic Coating\"\n                            />\n                            Photonic Coating\n                          </Label>\n                          <Label>\n                            <Field\n                              type=\"radio\"\n                              name=\"serviceType\"\n                              value=\"Integrated Optic Chip, Assembly and Others\"\n                            />\n                            Integrated Optic Chip, Assembly and Others\n                          </Label>\n                        </div>\n                      </DetailWrapper>\n                    </SectionWrapper>\n                    {/* <SectionWrapper>\n                      <SectionTitle></SectionTitle>\n                      <DetailWrapper>\n                        <PickTextWrapper>\n                          You picked:\n                          <StrongText>{values.serviceType}</StrongText>\n                        </PickTextWrapper>\n                      </DetailWrapper>\n                    </SectionWrapper> */}\n\n                    {values.serviceType === \"SPDT Optic\" && (\n                      <>\n                        <SectionWrapper>\n                          <SectionTitle></SectionTitle>\n                          <DetailWrapper>\n                            <Label className=\"required\">\n                              Blank source: {\"  \"}\n                              <Field\n                                validate={validateField}\n                                name=\"blankSource\"\n                                as=\"select\"\n                              >\n                                <option value=\"N/A\">Please Select</option>\n                                <option value=\"ANFF supplied\">\n                                  ANFF supplied – full custom\n                                </option>\n                                <option value=\"Customer supplied\">\n                                  Customer supplied\n                                </option>\n                              </Field>\n                              <br />\n                              <br />\n                              <Material\n                                serviceType=\"spdt\"\n                                handleChange={handleChange}\n                                materialValues={values.material}\n                              />\n                              <br />\n                              <Geometry\n                                handleChange={handleChange}\n                                geometryValues={values.geometry}\n                                blankSource={values.blankSource}\n                                substrateSource={\"N/A\"}\n                                serviceType={values.serviceType}\n                              />\n                            </Label>\n                          </DetailWrapper>\n                        </SectionWrapper>\n                        <Fragment>\n                          <Label>\n                            <FieldArray name=\"surface\">\n                              {({ push, pop }) => (\n                                <div>\n                                  {values.surface.map((side, index) => (\n                                    <Surface\n                                      key={index}\n                                      index={index}\n                                      handleChange={handleChange}\n                                      surfaceValues={values.surface[index]}\n                                      blankSource={values.blankSource}\n                                      substrateSource={\"N/A\"}\n                                      geometry={values.geometry.geometryType}\n                                    />\n                                  ))}\n                                  <SectionWrapper>\n                                    <SectionTitle></SectionTitle>\n                                    <DetailWrapper>\n                                      <Button4AddRemove\n                                        title=\"Add a side\"\n                                        onClick={() =>\n                                          push(surfaceInitialValues)\n                                        }\n                                      />\n                                      <Button4AddRemove\n                                        title=\"Remove last side\"\n                                        onClick={() => pop()}\n                                      />\n                                    </DetailWrapper>\n                                  </SectionWrapper>\n                                </div>\n                              )}\n                            </FieldArray>\n                            <SectionWrapper>\n                              <SectionTitle></SectionTitle>\n                              <DetailWrapper>\n                                <MyTextInput\n                                  labelClass=\"required\"\n                                  validate={validateField}\n                                  label=\"Quantity:\"\n                                  name=\"quantity\"\n                                  onChange={handleChange}\n                                />\n                                <MyTextArea\n                                  label=\"Special instructions:\"\n                                  name=\"specialInstructions\"\n                                  placeholder=\"Leave the description here\"\n                                  rows={3}\n                                  onChange={handleChange}\n                                />\n                                <Label>Upload PDF/PNG File:</Label>\n                                <input\n                                  type=\"file\"\n                                  name=\"specialInstructionFile\"\n                                  accept=\".pdf,.png\"\n                                  onChange={specialInstructionFileUpload}\n                                  ref={specialInstructionRefUpload}\n                                />\n                              </DetailWrapper>\n                            </SectionWrapper>\n                          </Label>\n                        </Fragment>\n                      </>\n                    )}\n                    {values.serviceType === \"Optical Coating\" && (\n                      <Fragment>\n                        <SectionWrapper>\n                          <SectionTitle></SectionTitle>\n                          <DetailWrapper>\n                            <Label className=\"required\">\n                              Substrate source: {\"  \"}\n                              <Field\n                                validate={validateField}\n                                name=\"substrateSource\"\n                                as=\"select\"\n                              >\n                                <option value=\"N/A\">Please select</option>\n                                <option value=\"ANFF supplied – stock\">\n                                  ANFF supplied – stock\n                                </option>\n                                <option value=\"Customer supplied\">\n                                  Customer supplied\n                                </option>\n                                <option value=\"ANFF supplied – full custom\">\n                                  ANFF supplied – full custom\n                                </option>\n                              </Field>\n                              {values.substrateSource ===\n                                \"ANFF supplied – stock\" && (\n                                <Fragment>\n                                  <Label>\n                                    <br />\n\n                                    <Material\n                                      serviceType=\"optical\"\n                                      handleChange={handleChange}\n                                      materialValues={values.material}\n                                      isStock={true}\n                                    />\n                                  </Label>\n                                </Fragment>\n                              )}\n                              {(values.substrateSource ===\n                                \"Customer supplied\" ||\n                                values.substrateSource ===\n                                  \"ANFF supplied – full custom\") && (\n                                <Fragment>\n                                  <Material\n                                    serviceType=\"optical\"\n                                    handleChange={handleChange}\n                                    materialValues={values.material}\n                                  />\n                                  <Geometry\n                                    handleChange={handleChange}\n                                    geometryValues={values.geometry}\n                                    blankSource={\"N/A\"}\n                                    substrateSource={values.substrateSource}\n                                    serviceType={values.serviceType}\n                                  />\n                                </Fragment>\n                              )}\n                            </Label>\n                          </DetailWrapper>\n                        </SectionWrapper>\n                        <Label>\n                          <FieldArray name=\"surface\">\n                            {({ push, pop }) => (\n                              <div>\n                                {values.surface.map((side, index) => (\n                                  <Surface\n                                    key={index}\n                                    index={index}\n                                    handleChange={handleChange}\n                                    surfaceValues={values.surface[index]}\n                                    blankSource={\"N/A\"}\n                                    serviceType={values.serviceType}\n                                    substrateSource={values.substrateSource}\n                                    geometry={values.geometry.geometryType}\n                                  />\n                                ))}\n                                <SectionWrapper>\n                                  <SectionTitle></SectionTitle>\n                                  <DetailWrapper>\n                                    <Button4AddRemove\n                                      title=\"Add a side\"\n                                      onClick={() => push(surfaceInitialValues)}\n                                    />\n                                    <Button4AddRemove\n                                      title=\"Remove last side\"\n                                      onClick={() => pop()}\n                                    />\n                                  </DetailWrapper>\n                                </SectionWrapper>\n                              </div>\n                            )}\n                          </FieldArray>\n                          {(values.substrateSource === \"ANFF supplied-stock\" ||\n                            values.substrateSource === \"Customer supplied\" ||\n                            values.substrateSource ===\n                              \"ANFF supplied – full custom\") && (\n                            <Fragment>\n                              <br />\n                              <MyTextInput\n                                label=\"Quantity:\"\n                                name=\"quantity\"\n                                onChange={handleChange}\n                              />\n                              <MyTextArea\n                                label=\"Special instructions:\"\n                                name=\"specialInstructions\"\n                                placeholder=\"Leave the description here\"\n                                rows={3}\n                                onChange={handleChange}\n                              />\n                              <Label>Upload PDF/PNG File:</Label>\n                              <input\n                                type=\"file\"\n                                name=\"specialInstructionFile\"\n                                accept=\".pdf,.png\"\n                                onChange={specialInstructionFileUpload}\n                                ref={specialInstructionRefUpload}\n                              />\n                            </Fragment>\n                          )}\n                        </Label>\n                      </Fragment>\n                    )}\n                    {values.serviceType === \"Photonic Coating\" && (\n                      <Fragment>\n                        <SectionWrapper>\n                          <SectionTitle></SectionTitle>\n                          <DetailWrapper>\n                            <Label>\n                              Substrate source: {\"  \"}\n                              <Field name=\"substrateSource\" as=\"select\">\n                                <option value=\"N/A\">Please select</option>\n                                <option value=\"ANFF supplied – stock\">\n                                  ANFF supplied – stock\n                                </option>\n                                <option value=\"Customer supplied\">\n                                  Customer supplied\n                                </option>\n                                <option value=\"ANFF supplied – full custom\">\n                                  ANFF supplied – full custom\n                                </option>\n                              </Field>\n                              {values.substrateSource ===\n                                \"ANFF supplied – stock\" && (\n                                <Fragment>\n                                  <Label>\n                                    <br />\n                                    In stock:\n                                    <Field\n                                      name=\"stockSize\"\n                                      as=\"select\"\n                                      onChange={handleChange}\n                                    >\n                                      <option value=\"N/A\">Please Select</option>\n                                      <option value=\"(Silicon (P-type, <100>) ø100mm x 525µm\">\n                                        Silicon (P-type, &lt;100&gt;) ø100mm x\n                                        525µm\n                                      </option>\n                                      <option value=\"5µm TOx on Silicon (P-type, <100>) ø100mm x 525µm\">\n                                        5µm TOx on Silicon (P-type, &lt;100&gt;)\n                                        ø100mm x 525µm\n                                      </option>\n                                      <option value=\"Silicon (P-type, <100>) ø150mm x 675µm\">\n                                        Silicon (P-type, &lt;100&gt;) ø150mm x\n                                        675µm\n                                      </option>\n                                    </Field>\n                                  </Label>\n                                </Fragment>\n                              )}\n                              {(values.substrateSource ===\n                                \"Customer supplied\" ||\n                                values.substrateSource ===\n                                  \"ANFF supplied – full custom\") && (\n                                <Fragment>\n                                  <Material\n                                    serviceType=\"photonic\"\n                                    handleChange={handleChange}\n                                    materialValues={values.material}\n                                  />\n                                  <Geometry\n                                    handleChange={handleChange}\n                                    geometryValues={values.geometry}\n                                    blankSource={\"N/A\"}\n                                    substrateSource={values.substrateSource}\n                                  />\n                                </Fragment>\n                              )}\n                            </Label>\n                          </DetailWrapper>\n                        </SectionWrapper>\n                        <Label>\n                          <FieldArray name=\"surface\">\n                            {({ push, pop }) => (\n                              <div>\n                                {values.surface.map((side, index) => (\n                                  <Surface\n                                    key={index}\n                                    index={index}\n                                    handleChange={handleChange}\n                                    surfaceValues={values.surface[index]}\n                                    blankSource={\"N/A\"}\n                                    serviceType={values.serviceType}\n                                    substrateSource={values.substrateSource}\n                                    geometry={values.geometry.geometryType}\n                                  />\n                                ))}\n                                {/* <button\n                                type=\"button\"\n                                onClick={() => push(surfaceInitialValues)}\n                              >\n                                Add a side\n                              </button>\n                              <button type=\"button\" onClick={() => pop()}>\n                                Remove last side\n                              </button> */}\n                                <SectionWrapper>\n                                  <SectionTitle></SectionTitle>\n                                  <DetailWrapper>\n                                    <Button4AddRemove\n                                      title=\"Add a side\"\n                                      onClick={() => push(surfaceInitialValues)}\n                                    />\n                                    <Button4AddRemove\n                                      title=\"Remove last side\"\n                                      onClick={() => pop()}\n                                    />\n                                  </DetailWrapper>\n                                </SectionWrapper>\n                              </div>\n                            )}\n                          </FieldArray>\n                          {(values.substrateSource === \"ANFF supplied-stock\" ||\n                            values.substrateSource === \"Customer supplied\" ||\n                            values.substrateSource ===\n                              \"ANFF supplied – full custom\") && (\n                            <Fragment>\n                              <br />\n                              <MyTextInput\n                                labelClass=\"required\"\n                                validate={validateField}\n                                label=\"Quantity:\"\n                                name=\"quantity\"\n                                onChange={handleChange}\n                              />\n                              <MyTextArea\n                                label=\"Special instructions:\"\n                                name=\"specialInstructions\"\n                                placeholder=\"Leave the description here\"\n                                rows={3}\n                                onChange={handleChange}\n                              />\n                              <Label>Upload PDF/PNG File:</Label>\n                              <input\n                                type=\"file\"\n                                name=\"specialInstructionFile\"\n                                accept=\".pdf,.png\"\n                                onChange={specialInstructionFileUpload}\n                                ref={specialInstructionRefUpload}\n                              />\n                            </Fragment>\n                          )}\n                        </Label>\n                      </Fragment>\n                    )}\n                    {values.serviceType ===\n                      \"Integrated Optic Chip, Assembly and Others\" && (\n                      <Fragment>\n                        <SectionWrapper>\n                          <SectionTitle></SectionTitle>\n                          <DetailWrapper>\n                            <Label>\n                              <NoticeTitle>\n                                For any requests or info about integrated optics\n                                and chip assembly, please feel free to contact\n                                the following:\n                              </NoticeTitle>\n                              <NoticeInfoWrapper>\n                                <NoticeInfo>\n                                  Node Director: A/Prof.{\" \"}\n                                  <a href=\"mailto:stephen.madden@anu.edu.au\">\n                                    Steve Madden\n                                  </a>\n                                </NoticeInfo>\n                                <NoticeInfo>\n                                  Email: stephen.madden@anu.edu.au\n                                </NoticeInfo>\n                                <NoticeInfo>\n                                  Phone: (02) 612 58574 or 0404 932 099\n                                </NoticeInfo>\n                              </NoticeInfoWrapper>\n                            </Label>\n                          </DetailWrapper>\n                        </SectionWrapper>\n                      </Fragment>\n                    )}\n\n                    {(values.serviceType === \"SPDT Optic\" ||\n                      values.serviceType === \"Optical Coating\" ||\n                      values.serviceType === \"Photonic Coating\") && (\n                      <Fragment>\n                        <SectionWrapper>\n                          <SectionTitle></SectionTitle>\n                          <DetailWrapper>\n                            <Button4AddRemove\n                              onClick={(e) =>\n                                handleAddPart(\n                                  e,\n                                  values,\n                                  resetForm,\n                                  setFieldValue,\n                                  validateForm\n                                )\n                              }\n                              className=\"add\"\n                              title=\"Add a part\"\n                            />\n                          </DetailWrapper>\n                        </SectionWrapper>\n                        <SectionWrapper>\n                          <SectionTitle></SectionTitle>\n                          <NextButtonWrapper>\n                            <NextButton\n                              onClick={(e) =>\n                                handleAddPart(\n                                  e,\n                                  values,\n                                  resetForm,\n                                  setFieldValue,\n                                  validateForm\n                                )\n                              }\n                            >\n                              <Link\n                                style={{\n                                  color: \"rgba(255,255,255,0.9)\",\n                                }}\n                                to=\"/customer\"\n                              >\n                                All parts specified - Next Step\n                              </Link>\n                            </NextButton>\n                            <label>Please note that you won’t be able to change the above parameters once you click Next Step.</label>\n                          </NextButtonWrapper>\n                        </SectionWrapper>\n                      </Fragment>\n                    )}\n                  </Form>\n                )}\n              </Formik>\n            </Fragment>\n          </BackgroundBlurWrapper>\n        </ContentWrapper>\n      </Wrapper>\n    </Layout>\n  );\n}\n\nconst Wrapper = styled.div`\n  /* background: linear-gradient(115.82deg, #00486f 0%, #eb7776 93.65%); */\n  /* background: linear-gradient(135deg, #176ab1 20%, #eb7776 80%); */\n  background: linear-gradient(115.82deg, #150050 0%, #176ab1 93.65%);\n`;\n\nconst ContentWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  padding: 200px 30px;\n`;\n\nconst BackgroundBlurWrapper = styled.div`\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);\n  padding: 50px;\n  border-radius: 30px;\n`;\n\nconst Label = styled.label`\n  margin: 0px 30px 0px 0px;\n  font-weight: 500;\n  font-size: 17px;\n  line-height: 130%;\n  /* text-transform: uppercase; */\n  color: rgba(255, 255, 255, 0.95);\n`;\n\nconst SectionWrapper = styled.div`\n  display: grid;\n  grid-template-columns: minmax(210px, 250px) auto;\n`;\n\nconst SectionTitle = styled(H3)`\n  margin: 10px;\n  color: rgba(0, 0, 0, 0.9);\n  text-shadow: 0px 10px 20px rgba(0, 0, 0, 0.4);\n`;\n\nconst DetailWrapper = styled.div`\n  margin: 20px;\n`;\n\nconst NextButton = styled.button`\n  margin: 10px;\n  padding: 12px 24px;\n  width: minmax(200px, 360px);\n  height: 44px;\n\n  background: linear-gradient(270deg, #d90068 0%, rgba(0, 28, 129, 0.9) 100%);\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n  border-radius: 30px;\n  border: none;\n  & {\n    transition: 0.3s cubic-bezier(0.455, 0.03, 0.515, 0.955);\n    transition-delay: 0.1s;\n  }\n  :hover {\n    filter: hue-rotate(10deg) brightness(110%) saturate(110%);\n    box-shadow: 0px 30px 60px rgba(0, 0, 0, 0.3);\n    cursor: pointer;\n    transform: scale(1.1);\n  }\n`;\n\nconst NextButtonWrapper = styled.div`\n  display: grid;\n  justify-items: right;\n  margin: 0px 30px;\n`;\n\nconst NoticeTitle = styled(Caption2)`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst NoticeInfoWrapper = styled.div`\n  display: grid;\n  background: transparent;\n  padding: 50px;\n  gap: 20px;\n  text-shadow: 0px 10px 20px rgba(0, 0, 0, 0.5);\n`;\n\nconst NoticeInfo = styled(BodyMain)``;\n\nconst PickTextWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 100px auto;\n  gap: 20px;\n  align-items: center;\n`;\n\nconst StrongText = styled(BodyIntro)`\n  /* color: rgba(255, 0, 0, 0.75);\n  text-shadow: 0px 10px 20 rgba(255, 0, 0, 0.8); */\n  background: linear-gradient(0deg, #1a2151 0%, #be1e69 50%);\n  background-clip: text;\n  --webkit-background-clip: text;\n  color: transparent;\n`;\n\nconst OneLineDropdownWrapper = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { themes } from \"../styles/ColorStyles\";\nimport { H3, MediumText } from \"../styles/TextStyles\";\n\nconst SidebarCard = (props) => {\n  const { title, subtitle, illustration } = props;\n  return (\n    <Wrapper>\n      <TextWrapper>\n        <Title>{title}</Title>\n        <Subtitle>{subtitle}</Subtitle>\n      </TextWrapper>\n      <Illustration src={illustration}></Illustration>\n    </Wrapper>\n  );\n};\n\nexport default SidebarCard;\n\nconst Wrapper = styled.div`\n  display: grid;\n  width: 480px;\n  height: 768px;\n  background: #d8ddef;\n  border-radius: 20px 0px 0px 20px;\n  gap: 30px;\n`;\n\nconst TextWrapper = styled.div`\n  display: grid;\n  padding: 30px;\n  gap: 30px;\n  max-width: 480px;\n  height: 200px;\n`;\n\nconst Title = styled(H3)`\n  color: ${themes.dark.text1};\n  background: linear-gradient(94.87deg, #be1e69 0%, #eb7776 53.11%);\n  background-clip: text;\n  --webkit-background-clip: text;\n  color: transparent;\n  height: 80px;\n`;\n\nconst Subtitle = styled(MediumText)``;\n\nconst Illustration = styled.img`\n  width: 360px;\n  height: 269.86px;\n  margin: 0 auto;\n`;\n","import { Formik, Form } from \"formik\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Layout from \"../../components/layout/layout\";\nimport SidebarCard from \"../../components/cards/SidebarCard\";\nimport { MyTextArea } from \"./fields/MyTextArea\";\nimport SubmitButton from \"../../components/buttons/SubmitButton\";\nimport {createBrowserHistory} from \"history\";\n\nexport async function postData(url = \"\", data = {}) {\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"content-type\": \"application/json\", Accept: \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return response;\n}\n\nexport default function Feedback() {\n  return (\n    <Layout>\n      <Wrapper>\n        <ContentWrapper>\n          <LeftSidebarWrapper>\n            <SidebarCard\n              title=\"Feel free to drop us a line and give us your feedback\"\n              subtitle=\"We are looking forward to hearing back from you\"\n              illustration=\"/images/illustrations/computer-feedback.svg\"\n            />\n          </LeftSidebarWrapper>\n          <FeedbackWrapper>\n            <Formik\n              initialValues={{\n                feedback: \"\",\n              }}\n              onSubmit={async (values) => {\n                await new Promise((r) => setTimeout(r, 500));\n                alert(JSON.stringify(values, null, 2));\n                //postData(\"http://localhost:8080/comp8715/optofab-website/src/api/Feedback.php\", values)\n                postData(\"https://tl20212.cecs.anu.edu.au/api/Feedback\", values)\n                  // .then((res) => {\n                  //   console.log(res.status);\n                  //   if(res.status==200) {\n                  //     const history = createBrowserHistory();\n                  //     history.push('success-feedback');\n                  //     window.location.reload();\n                  //   }\n                  // })\n                  // .catch(() => {\n                  //   const history = createBrowserHistory();\n                  //   history.push('error-submit');\n                  //   window.location.reload();\n                  // });\n              }}\n            >\n              <Form>\n                <TextareaWrapper>\n                  <img src=\"/images/smallicons/chat.svg\" />\n                  <MyTextArea\n                    //   label=\"Please send us any feedback:\"\n                    label=\"\"\n                    id=\"feedback-editor\"\n                    name=\"feedback\"\n                    placeholder=\"Please type in here\"\n                    rows={26}\n                    cols={60}\n                  />\n                </TextareaWrapper>\n                {/* <button type=\"submit\" value=\"Submit\">Submit</button> */}\n                <SubmitInfoWrapper>\n                  <SubmitButton value=\"Submit\" title=\"Submit\" />\n                </SubmitInfoWrapper>\n              </Form>\n            </Formik>\n          </FeedbackWrapper>\n        </ContentWrapper>\n      </Wrapper>\n    </Layout>\n  );\n}\n\nconst Wrapper = styled.div`\n  background: linear-gradient(120deg, #150050 0%, #eb7776 100%);\n`;\n\nconst ContentWrapper = styled.div`\n  /* position: relative; */\n  display: grid;\n  grid-template-columns: 480px auto;\n  max-width: 1234px;\n  height: 1080px;\n  margin: 0 auto;\n  padding: 200px 30px;\n`;\n\nconst LeftSidebarWrapper = styled.div`\n  /* position: absolute; */\n  /* left: 70px;\n  top: 166px; */\n`;\n\nconst FeedbackWrapper = styled.div`\n  display: grid;\n  /* place-items: center; */\n  gap: 30px;\n  max-width: 800px;\n  height: 768px;\n  padding: 40px;\n  background: rgba(255, 255, 255, 0.2);\n  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(40px);\n  /* Note: backdrop-filter has minimal browser support */\n  border-radius: 0px 20px 20px 0px;\n`;\n\nconst TextareaWrapper = styled.div`\n  display: grid;\n  max-height: 600px;\n  /* max-width: 800px; */\n  grid-template-columns: 28px auto;\n  background: linear-gradient(\n    180deg,\n    rgba(99, 106, 150, 0.4) 0%,\n    rgba(182, 186, 214, 0.25) 100%\n  );\n  padding: 20px;\n  border: 0.5px solid rgba(255, 255, 255, 0.3);\n  box-sizing: border-box;\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n  backdrop-filter: blur(40px);\n  /* Note: backdrop-filter has minimal browser support */\n  border-radius: 20px;\n`;\n\nconst SubmitInfoWrapper = styled.div`\n  display: grid;\n  justify-items: right;\n  margin: 20px 0;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction WaveBackgound2() {\n  return (\n    <Wrapper>\n      <Background />\n      <Wave\n        src=\"/images/waves/modify-wave1.svg\"\n        style={{ top: \"50px\", filter: \"blur(60px)\" }}\n      />\n      <BottomWave\n        src=\"/images/waves/modify-wave2.svg\"\n        style={{ top: \"600px\", filter: \"blur(0px)\" }}\n      />\n    </Wrapper>\n  );\n}\n\nexport default WaveBackgound2;\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst Wave = styled.img`\n  position: absolute;\n  z-index: -1;\n\n  /* fix background issues for large screen size */\n  @media (min-width: 1440px) {\n    width: 100%;\n  }\n`;\n\nconst BottomWave = styled(Wave)`\n  @media (prefers-color-scheme: dark) {\n    content: url(\"/images/waves/modify-wave2-dark.svg\");\n  }\n`;\n\nconst Background = styled.div`\n  background: linear-gradient(\n    115.82deg,\n    rgba(0, 35, 123, 0.7) 0%,\n    rgba(235, 119, 118, 0.9) 93.65%\n  );\n  /* don't forget position bc parent wrapper is relative */\n  position: absolute;\n  /* don't forget to set size */\n  width: 100%;\n  height: 1080px;\n  z-index: -1;\n`;\n","import { Formik, Form } from \"formik\";\nimport React, {useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport { MyTextArea } from \"./fields/MyTextArea\";\nimport { MyTextInput } from \"./fields/MyTextInput\";\nimport { postData } from \"./Feedback\";\nimport Layout from \"../../components/layout/layout\";\nimport SubmitButton from \"../../components/buttons/SubmitButton\";\nimport WaveBackgound2 from \"../../components/backgrounds/WaveBackground2\";\nimport { createBrowserHistory } from 'history';\n\n// #BUG1: Submit function\n\nexport default function Modify() {\n\n  function modifyFileUpload(e) {\n    e.preventDefault();\n    let file = e.target.files[0];\n    let fileType = file.name.substring(\n      file.name.indexOf(\".\") + 1,\n      file.name.length\n    );\n    if (\n      fileType !== \"png\" &&\n      fileType !== \"pdf\" &&\n      fileType !== \"PNG\" &&\n      fileType !== \"PDF\"\n    ) {\n      alert(\"Please upload PDF or PNG file\");\n      e.target.value = \"\";\n    } else {\n      const formdata = new FormData();\n      formdata.append(\"file\", file);\n      const url =\n        \"http://localhost:8080/comp8715/optofab-website/src/api/Attachment.php\";\n      fetch(url, {\n        method: \"POST\",\n        body: formdata\n      })\n        .then((res) => {\n          console.log(res.status);\n          alert(\"uploaded successfully\");\n        })\n        .catch(() => {\n          alert(\"upload failed\");\n        });\n    }\n  }\n\n  const refUpload = useRef(null);\n\n  const handleClick = () => {\n    if (refUpload) {\n      return refUpload.current?.click();\n    }\n  };\n\n  return (\n    <Layout>\n      <Wrapper>\n        <WaveBackgound2 />\n        <ContentWrapper>\n          <Formik\n            initialValues={{\n              ordernum: \"\",\n              Modification: \"\",\n            }}\n            onSubmit={async (values) => {\n              //postData(\"http://localhost:8080/comp8715/optofab-website/src/api/Modification.php\", values)\n              postData(\"../../api/Modification.php\", values)\n                .then((res) => {\n                  if (res.status === 200) {\n                    //console.log(res.status);\n                    const history = createBrowserHistory();\n                    history.push('success-modify');\n                    window.location.reload();\n                  }\n                })\n                .catch(() => {\n                  const history = createBrowserHistory();\n                  history.push('error-submit');\n                  window.location.reload();\n                });\n            }}\n\n          >\n            <Form>\n              <FormItemWrapper>\n                <OrderNoWrapper>\n                  <img src=\"/images/smallicons/billing.svg\" />\n                  <MyTextInput\n                    //   label=\"Order number:\"\n                    label=\"\"\n                    name=\"ordernum\"\n                    id=\"ordernum\"\n                    placeholder=\"Order number\"\n                  />\n                </OrderNoWrapper>\n                <DescriptionWrapper>\n                  {/* <img src=\"/images/smallicons/courses.svg\" /> */}\n                  <MyTextArea\n                    //   label=\"Please describe what kind of modification you want to make:\"\n                    label=\"\"\n                    id=\"Modification\"\n                    name=\"Modification\"\n                    placeholder=\"Please type in modifications here\"\n                    rows={12}\n                    cols={100}\n                  />\n                </DescriptionWrapper>\n                <input\n                  type=\"file\"\n                  name=\"description\"\n                  accept=\"image/png,application/pdf\"\n                  onChange={modifyFileUpload}\n                  ref={refUpload}\n                  hidden\n                />\n                <UploadButtonWrapper>\n                  <UploadButton\n                    type=\"button\"\n                    onClick={handleClick}\n                    value=\"Upload files (png, pdf)\"\n                  />\n                  {/* <button type=\"submit\">Submit</button> */}\n                  <SubmitButton title=\"Submit\" />\n                </UploadButtonWrapper>\n              </FormItemWrapper>\n            </Form>\n          </Formik>\n        </ContentWrapper>\n      </Wrapper>\n    </Layout>\n  );\n}\n\nconst Wrapper = styled.div`\n  /* background: linear-gradient(115.82deg, #00486f 0%, #eb7776 93.65%); */\n  /* display: grid;\n  place-items: center; */\n`;\n\nconst ContentWrapper = styled.div`\n  max-width: 1234px;\n  margin: 0 auto;\n  padding: 200px 30px;\n`;\n\nconst OrderNoWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 28px auto;\n  align-items: center;\n  padding: 10px;\n  width: 360px;\n  background: linear-gradient(\n    180deg,\n    rgba(99, 106, 150, 0.4) 0%,\n    rgba(182, 186, 214, 0.25) 100%\n  );\n  border: 0.5px solid rgba(255, 255, 255, 0.3);\n  box-sizing: border-box;\n  /* drop shadow combo 1 */\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n  backdrop-filter: blur(40px);\n  /* Note: backdrop-filter has minimal browser support */\n  border-radius: 30px;\n`;\n\nconst DescriptionWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 28px auto;\n  padding: 10px;\n  width: 680px;\n  height: 320px;\n  background: linear-gradient(\n    180deg,\n    rgba(99, 106, 150, 0.4) 0%,\n    rgba(182, 186, 214, 0.25) 100%\n  );\n  border: 0.5px solid rgba(255, 255, 255, 0.3);\n  box-sizing: border-box;\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n  backdrop-filter: blur(40px);\n  /* Note: backdrop-filter has minimal browser support */\n  border-radius: 20px;\n`;\n\nconst FormItemWrapper = styled.div`\n  display: grid;\n  gap: 30px;\n  justify-items: center;\n`;\n\nconst UploadButtonWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 300px auto;\n  gap: 30px;\n`;\n\nconst UploadButton = styled.input`\n  /* background: linear-gradient(91.4deg, #2fb8ff 0%, #9eecd9 100%); */\n  background: transparent;\n  margin: 10px;\n  padding: 12px 24px;\n  max-width: 400px;\n  /* border: none; */\n  border-radius: 30px;\n  color: #fff;\n  font-weight: bold;\n  font-family: Segoe UI, sans-serif;\n  border: 1px solid #000000;\n  text-align: center;\n  /* box-sizing: border-box; */\n\n  & {\n    transition: 0.3s cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  }\n\n  :focus {\n    outline: none;\n  }\n  :hover {\n    background: rgba(0, 0, 0, 0.1);\n    cursor: pointer;\n    transform: scale(1.05);\n  }\n`;\n","import { Formik, Form } from \"formik\";\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { MyTextArea } from \"./fields/MyTextArea\";\nimport { MyTextInput } from \"./fields/MyTextInput\";\nimport { postData } from \"./Feedback\";\nimport SubmitButton from \"../../components/buttons/SubmitButton\";\nimport Layout from \"../../components/layout/layout\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport ReactDOM from \"react-dom\";\n\n// #BUG1: postData error after submitting; need more specific testing here, otherwise can't style the popped up tables afterwards\nlet resultData = [];\nasync function fetchStatus(url, orderId) {\n  let results = await (await postData(url, orderId)).json()\n  createTable(results);\n}\nfunction createTable(tableData){\n  const element = (\n      <TableContainer component={Paper}>\n    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell align=\"left\">Part Id</TableCell>\n          <TableCell align=\"left\">Status</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {\n          tableData.map((data) => (\n                    <TableRow\n                        key={data.name}\n                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                    >\n                      <TableCell align=\"left\">{data.partNumber}</TableCell>\n                      <TableCell align=\"left\">{data.status}</TableCell>\n                    </TableRow>\n                ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n  );\n  console.log('111');\n  ReactDOM.render(element, document.getElementById('table'));\n}\n\nexport default function Track() {\n  return (\n    <Layout>\n      <Wrapper>\n        <ContentWrapper>\n          <Formik\n            initialValues={{\n              ordernum: \"\",\n            }}\n            onSubmit={async (values) => {\n              await new Promise((r) => setTimeout(r, 500));\n              //alert(JSON.stringify(values, null, 2));\n              await fetchStatus(\"../Status.php\", values)\n              //await fetchStatus(\"http://localhost:8080/comp8715/optofab-website/src/api/Status.php\", values)\n              console.log(resultData);\n            }}\n          >\n            <Form>\n              <FormWrapper>\n                <InputWrapper>\n                  <img src=\"/images/smallicons/chat.svg\" />\n                  <MyTextInput\n                    label=\"\"\n                    name=\"ordernum\"\n                    placeholder=\"Enter the order number here\"\n                  />\n                </InputWrapper>\n                {/* <button type=\"submit\">Submit</button> */}\n                <SubmitButton title=\"TRACK\" />\n              </FormWrapper>\n            </Form>\n          </Formik>\n          <br />\n          <div id='table'></div>\n        </ContentWrapper>\n      </Wrapper>\n    </Layout>\n  );\n}\n\nconst Wrapper = styled.div`\n  background: linear-gradient(135deg, #1a2151 10%, #eb7776 90%);\n  display: grid;\n  place-items: center;\n`;\n\nconst ContentWrapper = styled.div`\n  position: relative;\n  max-width: 1234px;\n  height: 1080px;\n  margin: 0 auto;\n  padding: 200px 30px;\n`;\n\nconst InputWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 28px auto;\n  align-items: center;\n  padding: 10px;\n  width: 360px;\n  background: linear-gradient(\n    180deg,\n    rgba(99, 106, 150, 0.4) 0%,\n    rgba(182, 186, 214, 0.25) 100%\n  );\n  border: 0.5px solid rgba(255, 255, 255, 0.3);\n  box-sizing: border-box;\n  /* drop shadow combo 1 */\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n  backdrop-filter: blur(40px);\n  /* Note: backdrop-filter has minimal browser support */\n  border-radius: 30px;\n`;\n\nconst FormWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 380px auto;\n  align-items: center;\n`;\n","import { Field, Form, Formik } from 'formik'\nimport React, { useState } from 'react'\nimport { MyTextInput } from '../fields/MyTextInput';\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nexport const customerInfoInitialValues = {\n    sameAsAbove: false\n}\n\nexport default function CustomerInfo({part}) {\n\n    const baseURL = '../../api/OrderRequest.php'\n    //const baseURL = 'http://localhost:8080/comp8715/optofab-website/src/api/OrderRequest.php'\n    const [verified, setVerified] = useState(false)\n\n    function fillBilling(values, setFieldValue) {\n        \n        values.sameAsAbove = !values.sameAsAbove\n\n        if(values.sameAsAbove) {\n            for (const [key, value] of Object.entries(values)) {\n                if(key.endsWith('Shipping')) {\n                    let name = key.replace('Shipping', 'Billing')\n                    setFieldValue(name, value)\n                }\n            }\n        }\n        else {\n            for (const [key] of Object.entries(values)) {\n                if(key.endsWith('Billing')) {\n                    setFieldValue(key, '')\n                }\n            }\n        }\n    }\n\n    function handleSubmitForm(values) {\n\n        if (!verified)\n            return\n\n        let data = { customerInfo: values }\n    \n        for (let i=1; i<part; i++) {\n            let itemName = `part${i}`\n            let item = window.localStorage.getItem(itemName)\n            data[itemName] = JSON.parse(item)\n        }\n\n        console.log(data)\n        // next is ajax request\n        fetch(baseURL, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n    }\n    \n    return (\n        <Formik\n            initialValues={customerInfoInitialValues}\n            onSubmit={(values, actions) => {\n                setTimeout(() => {\n                handleSubmitForm(values)\n                actions.setSubmitting(false);\n                }, 1000);\n            }}>\n            {({handleChange, values, setFieldValue, isSubmitting}) => (\n                <Form>\n                    <h1>Customer Information</h1>\n                    <MyTextInput name='firstName' label='First Name' onChange={handleChange} />\n                    <MyTextInput name='lastName' label='Last Name' onChange={handleChange} />\n                    <MyTextInput name='companyName' label='Company Name' onChange={handleChange} />\n                    <MyTextInput name='email' label='Email' onChange={handleChange} />\n                    <MyTextInput name='phoneNumber' label='Company Name' onChange={handleChange} />\n                    \n                    <h2>Shipping Address</h2>\n                    <MyTextInput name='firstNameShipping' label='First Name' onChange={handleChange} />\n                    <MyTextInput name='lastNameShipping' label='Last Name' onChange={handleChange} />\n                    <MyTextInput name='companyNameShipping' label='Company Name' onChange={handleChange} />\n                    <MyTextInput name='address1Shipping' label='Address' onChange={handleChange} />\n                    <MyTextInput name='address2Shipping' label='Address2' onChange={handleChange} />\n                    <MyTextInput name='countryShipping' label='Country' onChange={handleChange} />\n                    <MyTextInput name='stateShipping' label='State' onChange={handleChange} />\n                    <MyTextInput name='cityShipping' label='City' onChange={handleChange} />\n                    <MyTextInput name='postcodeShipping' label='PostCode' onChange={handleChange} />\n                    \n                    <label>\n                        same as above?\n                        <Field name='sameAsAbove' type='checkbox' onClick={() => fillBilling(values, setFieldValue)}/>\n                    </label>\n                    <h2>Billing Address</h2>\n                    <MyTextInput name='firstNameBilling' label='First Name' onChange={handleChange} />\n                    <MyTextInput name='lastNameBilling' label='Last Name' onChange={handleChange} />\n                    <MyTextInput name='companyNameBilling' label='Company Name' onChange={handleChange} />\n                    <MyTextInput name='address1Billing' label='Address' onChange={handleChange} />\n                    <MyTextInput name='address2Billing' label='Address2' onChange={handleChange} />\n                    <MyTextInput name='countryBilling' label='Country' onChange={handleChange} />\n                    <MyTextInput name='stateBilling' label='State' onChange={handleChange} />\n                    <MyTextInput name='cityBilling' label='City' onChange={handleChange} />\n                    <MyTextInput name='postcodeBilling' label='PostCode' onChange={handleChange} />\n\n                    <ReCAPTCHA\n                        sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n                        onChange={() => setVerified(true)}\n                    />\n                    <button type='submit' disabled={isSubmitting}>Submit</button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n","import { NavLink } from \"react-router-dom\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Caption2, SmallText } from \"../styles/TextStyles\";\n\nexport default function RequestButton(props) {\n  const { title, subtitle } = props;\n  return (\n    <NavLink to=\"/request\">\n      <Wrapper>\n        <IconWrapper>\n          <Icon\n            src=\"/images/smallicons/credit.svg\"\n            alt=\"button icon\"\n            className=\"icon\"\n          />\n          <Ring src=\"/images/smallicons/icon-ring.svg\" alt=\"ring icon\" />\n        </IconWrapper>\n        <TextWrapper>\n          <Title>{title || \"Request an order\"}</Title>\n          <Subtitle>{subtitle || \"make an inquiry\"}</Subtitle>\n        </TextWrapper>\n      </Wrapper>\n    </NavLink>\n  );\n}\n\nconst Wrapper = styled.div`\n  width: 280px;\n  height: 77px;\n  padding: 12px;\n  background: linear-gradient(180deg, #ffffff 0%, #d9dfff 100%);\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1),\n    0px 20px 40px rgba(23, 0, 102, 0.2),\n    inset 0px 0px 0px 0.5px rgba(255, 255, 255, 0.5);\n  border-radius: 20px;\n  /* set icon and text side by side: display -> grid;\n  and set grid-template-columns */\n  display: grid;\n  /* first column (icon) 53px = 77 - 2 * 12; */\n  grid-template-columns: 53px auto;\n  /* 1. align-content only aligns when child content is smaller than parent content*/\n  /* align-content: center; */\n  /* 2. align-items will align multiple (same applies to justify-content and justify-items*/\n  align-items: center;\n  /* 20px gap between columns */\n  gap: 20px;\n\n  /* apply transition to self (&) and child elements (*) */\n  *,\n  & {\n    /* transition, ease in and out/ cubic-bezier.com for more */\n    transition: 0.3s cubic-bezier(0.455, 0.03, 0.515, 0.955);\n    transition-delay: 0.1s;\n  }\n  :hover {\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1),\n      0px 30px 60px rgba(23, 0, 102, 0.5),\n      /* half pixel border: in figma use inner shadow effect to spread 0.5px; in Chrome, if stroke = 0.5px, it won't show */\n        inset 0px 0px 0px 0.5px rgba(255, 255, 255, 0.5);\n    /* animation */\n    transform: translateY(-3px) scale(1.05);\n\n    /* corresponds to class name icon */\n    .icon {\n      transform: scale(1.3);\n    }\n  }\n`;\n\nconst Title = styled(Caption2)`\n  color: black;\n`;\n\nconst Subtitle = styled(SmallText)`\n  color: black;\n  /* opacity applies to all the layers, vs color rgba only applies to text color */\n  opacity: 0.7;\n`;\n\nconst Icon = styled.img`\n  width: 29px;\n  height: 29px;\n`;\n\nconst Ring = styled.img`\n  position: absolute;\n  /* why negative? if top: 0; left: 0; it will stick to the right-bottom corner? */\n  top: -15px;\n  left: -15.6px;\n\n  ${Wrapper}:hover & {\n    transform: rotate(10deg) scale(1.1);\n  }\n`;\n\nconst IconWrapper = styled.div`\n  width: 45px;\n  height: 45px;\n  background: linear-gradient(180deg, #f43b86 0%, rgba(61, 8, 123, 0.7) 100%);\n  /* make a circle */\n  border-radius: 50%;\n  /* css grid to center svg img */\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  /* 45px vs 53px of parent assigned width, to center it (self is vs parent wrapper to justify) */\n  justify-self: center;\n  /* set relative for Ring (absolute) to float */\n  position: relative;\n\n  /* in styled component, ${Wrapper} to select parent wrapper (must be declared beforehand) */\n  ${Wrapper}:hover & {\n    /* filter effects, see:  https://developer.mozilla.org/en-US/docs/Web/CSS/filter */\n    filter: hue-rotate(10deg) brightness(120%) saturate(80%);\n  }\n`;\n\nconst TextWrapper = styled.div`\n  display: grid;\n  gap: 4px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction MockupAnimation() {\n  return (\n    <Wrapper>\n      {/* mockups for future real pics replacement */}\n      {/* <div className=\"mockup1\"></div> */}\n      <div className=\"mockup1\" />\n    </Wrapper>\n  );\n}\n\nexport default MockupAnimation;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  @media (max-width: 768px) {\n    transform: scale(0.56);\n    transform-origin: top left;\n  }\n  @media (max-width: 450px) {\n    transform: scale(0.5);\n    transform-origin: top left;\n  }\n\n  .mockup1 {\n    /* mockup1 copied from Figma */\n    position: absolute;\n    width: 661px;\n    height: 496px;\n    left: 0px;\n    top: 0px;\n    background: url(\"/images/illustrations/computer-herosection.svg\");\n    backdrop-filter: blur(10px);\n    /* Note: backdrop-filter has minimal browser support */\n    border-radius: 16px;\n  }\n\n  & {\n    transition: 1.5s cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n  :hover {\n    filter: brightness(130%);\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction WaveBackgound() {\n  return (\n    <Wrapper>\n      <Background />\n      <Wave\n        src=\"/images/waves/hero-wave1.svg\"\n        style={{ top: \"120px\", filter: \"blur(15px)\" }}\n      />\n      <Wave\n        src=\"/images/waves/hero-wave2.svg\"\n        style={{ top: \"380px\", filter: \"blur(5px)\" }}\n      />\n      <BottomWave src=\"/images/waves/hero-wave3.svg\" style={{ top: \"560px\" }} />\n    </Wrapper>\n  );\n}\n\nexport default WaveBackgound;\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst Wave = styled.img`\n  position: absolute;\n  z-index: -1;\n\n  /* fix background issues for large screen size */\n  @media (min-width: 1440px) {\n    width: 100%;\n  }\n`;\n\nconst BottomWave = styled(Wave)`\n  @media (prefers-color-scheme: dark) {\n    content: url(\"/images/waves/hero-wave3-dark.svg\");\n  }\n`;\n\nconst Background = styled.div`\n  background: linear-gradient(\n    115.82deg,\n    rgba(0, 35, 123, 0.7) 0%,\n    rgba(235, 119, 118, 0.9) 93.65%\n  );\n  /* don't forget position bc parent wrapper is relative */\n  position: absolute;\n  /* don't forget to set size */\n  width: 100%;\n  height: 1080px;\n  z-index: -1;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RequestButton from \"../buttons/RequestButton\";\nimport { H1, MediumText } from \"../styles/TextStyles\";\nimport { themes } from \"../styles/ColorStyles\";\nimport MockupAnimation from \"../animations/MockupAnimation\";\nimport WaveBackgound from \"../backgrounds/WaveBackgound\";\n\nconst HeroSection = () => {\n  return (\n    <Wrapper>\n      <WaveBackgound />\n      <ContentWrapper>\n        <TextWrapper>\n          <Title>\n            Welcome to <br />\n            OptoFab Portal Services\n          </Title>\n          <Description>\n            We deliver precision full custom optics, coatings, chips, and\n            systems to customer specifications with short lead times and at a\n            palatable price to empower researchers, start-ups, and industrial\n            users in rapid iterations of experimental setups and/or product\n            development cycles. We also aspire to be a focal point for coatings\n            expertise, knowledge and information dissemination for the national\n            interest.\n          </Description>\n          <RequestButton title=\"Make a request\" subtitle=\"free inquiry\" />\n        </TextWrapper>\n        <MockupAnimation />\n      </ContentWrapper>\n    </Wrapper>\n  );\n};\n\nexport default HeroSection;\n\nconst Wrapper = styled.div`\n  /* prevent future mockups of overflowing outside*/\n  overflow: hidden;\n`;\n\nconst ContentWrapper = styled.div`\n  /* don't use width */\n  max-width: 1300px;\n  /* normal center trick */\n  margin: 0 auto;\n  padding: 200px 30px;\n  display: grid;\n  grid-template-columns: 540px auto;\n\n  /* for mobile devices of < 450px wide */\n  @media (max-width: 768px) {\n    grid-template-columns: auto;\n    gap: 60px;\n    padding: 150px 20px 250px;\n  }\n`;\n\nconst TextWrapper = styled.div`\n  max-width: 540px;\n  display: grid;\n  gap: 30px;\n`;\n\nconst Title = styled(H1)`\n  color: ${themes.dark.text1};\n  background: linear-gradient(94.87deg, #be1e69 0%, #eb7776 53.11%);\n  background-clip: text;\n  --webkit-background-clip: text;\n  color: transparent;\n`;\n\nconst Description = styled(MediumText)``;\n","import * as React from \"react\";\nimport Layout from \"./components/layout/layout\";\nimport HeroSection from \"./components/sections/HeroSection\";\nconst HomePage = () => (\n  <>\n    <Layout>\n      <HeroSection />\n    </Layout>\n  </>\n);\n\nexport default HomePage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst OvalBackground1 = () => {\n  return (\n    <Wrapper>\n      <Background />\n      <Oval\n        src=\"/images/ovals/oval-bright1.svg\"\n        alt=\"background img\"\n        style={{ left: \"00px\" }}\n      />\n      <Oval\n        src=\"/images/ovals/oval-dark2.svg\"\n        alt=\"background img 2\"\n        style={{ right: \"00px\" }}\n      />\n    </Wrapper>\n  );\n};\n\nexport default OvalBackground1;\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst Background = styled.div`\n  background: linear-gradient(158.45deg, #fdd2bf 22.65%, #012443 100%);\n  position: absolute;\n  width: 100%;\n  height: 1024px;\n  z-index: -1;\n`;\n\nconst Oval = styled.img`\n  position: absolute;\n  z-index: -1;\n`;\n","import { NavLink } from \"react-router-dom\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Caption2, SmallText } from \"../styles/TextStyles\";\n\nconst SimpleRequestButton = (props) => {\n  const { title, to, src } = props;\n  return (\n    <NavLink to={to}>\n      <Wrapper>\n        <IconWrapper>\n          <Icon src={src} alt=\"button icon\" className=\"icon\" />\n          {/* <Ring src=\"/images/smallicons/icon-ring.svg\" alt=\"ring icon\" /> */}\n        </IconWrapper>\n        <TextWrapper>\n          <Title>{title || \"Request an order\"}</Title>\n          {/* <Subtitle>{subtitle || \"make an inquiry\"}</Subtitle> */}\n        </TextWrapper>\n      </Wrapper>\n    </NavLink>\n  );\n};\n\nexport default SimpleRequestButton;\n\nconst Wrapper = styled.div`\n  width: 260px;\n  height: 66px;\n  padding: 11px;\n  background: linear-gradient(180deg, #ffffff 0%, #d9dfff 100%);\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1),\n    0px 20px 40px rgba(23, 0, 102, 0.2),\n    inset 0px 0px 0px 0.5px rgba(255, 255, 255, 0.5);\n  border-radius: 20px;\n  /* set icon and text side by side: display -> grid;\n  and set grid-template-columns */\n  display: grid;\n  /* first column (icon) 53px = 77 - 2 * 12; */\n  grid-template-columns: 53px auto;\n  /* 1. align-content only aligns when child content is smaller than parent content*/\n  /* align-content: center; */\n  /* 2. align-items will align multiple (same applies to justify-content and justify-items*/\n  align-items: center;\n  /* 20px gap between columns */\n  gap: 20px;\n\n  /* apply transition to self (&) and child elements (*) */\n  *,\n  & {\n    /* transition, ease in and out/ cubic-bezier.com for more */\n    transition: 0.3s cubic-bezier(0.455, 0.03, 0.515, 0.955);\n    transition-delay: 0.1s;\n  }\n  :hover {\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1),\n      0px 30px 60px rgba(23, 0, 102, 0.5),\n      /* half pixel border: in figma use inner shadow effect to spread 0.5px; in Chrome, if stroke = 0.5px, it won't show */\n        inset 0px 0px 0px 0.5px rgba(255, 255, 255, 0.5);\n    /* animation */\n    transform: translateY(-3px) scale(1.05);\n\n    /* corresponds to class name icon */\n    .icon {\n      transform: scale(1.3);\n    }\n  }\n`;\n\nconst Title = styled(Caption2)`\n  color: black;\n`;\n\nconst Subtitle = styled(SmallText)`\n  color: black;\n  /* opacity applies to all the layers, vs color rgba only applies to text color */\n  opacity: 0.7;\n`;\n\nconst Icon = styled.img`\n  width: 29px;\n  height: 29px;\n`;\n\nconst Ring = styled.img`\n  position: absolute;\n  /* why negative? if top: 0; left: 0; it will stick to the right-bottom corner? */\n  top: -15px;\n  left: -15.6px;\n\n  ${Wrapper}:hover & {\n    transform: rotate(10deg) scale(1.1);\n  }\n`;\n\nconst IconWrapper = styled.div`\n  width: 45px;\n  height: 45px;\n  background: linear-gradient(180deg, #007ac1, rgba(61, 8, 123, 0.7) 100%);\n\n  /* make a circle */\n  border-radius: 50%;\n  /* css grid to center svg img */\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  /* 45px vs 53px of parent assigned width, to center it (self is vs parent wrapper to justify) */\n  justify-self: center;\n  /* set relative for Ring (absolute) to float */\n  position: relative;\n\n  /* in styled component, ${Wrapper} to select parent wrapper (must be declared beforehand) */\n  ${Wrapper}:hover & {\n    /* filter effects, see:  https://developer.mozilla.org/en-US/docs/Web/CSS/filter */\n    filter: hue-rotate(10deg) brightness(120%) saturate(80%);\n  }\n`;\n\nconst TextWrapper = styled.div`\n  display: grid;\n  gap: 4px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport OvalBackground1 from \"../components/backgrounds/OvalBackground1\";\nimport SimpleRequestButton from \"../components/buttons/SimpleRequestButton\";\nimport { H2 } from \"../components/styles/TextStyles\";\n\nconst ErrorSubmit = () => {\n  return (\n    <Wrapper>\n      <OvalBackground1 />\n      <ContentWrapper>\n        <SideImageWrapper></SideImageWrapper>\n        <MessageWrapper>\n          <Message>Unfortunately, your form fails to submit...</Message>\n          <ButtonWrapper>\n            <SimpleRequestButton\n              title=\"Re-submit a form\"\n              to=\"/request\"\n              src=\"/images/smallicons/pen.svg\"\n            />\n            <SimpleRequestButton\n              title=\"Go to homepage\"\n              to=\"/\"\n              src=\"/images/smallicons/home.svg\"\n            />\n          </ButtonWrapper>\n        </MessageWrapper>\n      </ContentWrapper>\n    </Wrapper>\n  );\n};\n\nexport default ErrorSubmit;\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst ContentWrapper = styled.div`\n  position: absolute;\n  top: 100px;\n  display: grid;\n  grid-template-columns: 3fr 2fr;\n  margin: 100px;\n`;\n\nconst SideImageWrapper = styled.div``;\n\nconst MessageWrapper = styled.div`\n  display: grid;\n  gap: 50px;\n`;\n\nconst Message = styled(H2)`\n  color: #fafafa;\n  text-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n`;\n\nconst ButtonWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 50px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport OvalBackground1 from \"../components/backgrounds/OvalBackground1\";\nimport SimpleRequestButton from \"../components/buttons/SimpleRequestButton\";\nimport { H2 } from \"../components/styles/TextStyles\";\n\nconst SuccessSubmit = () => {\n  return (\n    <Wrapper>\n      <OvalBackground1 />\n      <ContentWrapper>\n        <MessageWrapper>\n          <Message>\n            Your form has been sucessfully submmitted! <br />\n            We'll contact you soon!\n          </Message>\n          <ButtonWrapper>\n            <SimpleRequestButton\n              title=\"Submit a new one\"\n              to=\"/request\"\n              src=\"/images/smallicons/pen.svg\"\n            />\n            <SimpleRequestButton\n              title=\"Go to homepage\"\n              to=\"/\"\n              src=\"/images/smallicons/home.svg\"\n            />\n          </ButtonWrapper>\n        </MessageWrapper>\n        <SideImageWrapper></SideImageWrapper>\n      </ContentWrapper>\n    </Wrapper>\n  );\n};\n\nexport default SuccessSubmit;\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst ContentWrapper = styled.div`\n  position: absolute;\n  top: 100px;\n  display: grid;\n  grid-template-columns: 3fr 2fr;\n  margin: 100px;\n`;\n\nconst SideImageWrapper = styled.div``;\n\nconst MessageWrapper = styled.div`\n  display: grid;\n  gap: 50px;\n`;\n\nconst Message = styled(H2)`\n  color: #fafafa;\n  text-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n`;\n\nconst ButtonWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 50px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport OvalBackground1 from \"../components/backgrounds/OvalBackground1\";\nimport SimpleRequestButton from \"../components/buttons/SimpleRequestButton\";\nimport { H2 } from \"../components/styles/TextStyles\";\n\nconst SuccessModify = () => {\n    return (\n        <Wrapper>\n            <OvalBackground1 />\n            <ContentWrapper>\n                <MessageWrapper>\n                    <Message>\n                        Your modification has been sucessfully submmitted! <br />\n                        We'll contact you soon!\n                    </Message>\n                    <ButtonWrapper>\n                        <SimpleRequestButton\n                            title=\"Submit a new one\"\n                            to=\"/modify\"\n                            src=\"/images/smallicons/pen.svg\"\n                        />\n                        <SimpleRequestButton\n                            title=\"Go to homepage\"\n                            to=\"/\"\n                            src=\"/images/smallicons/home.svg\"\n                        />\n                    </ButtonWrapper>\n                </MessageWrapper>\n                <SideImageWrapper></SideImageWrapper>\n            </ContentWrapper>\n        </Wrapper>\n    );\n};\n\nexport default SuccessModify;\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst ContentWrapper = styled.div`\n  position: absolute;\n  top: 100px;\n  display: grid;\n  grid-template-columns: 3fr 2fr;\n  margin: 100px;\n`;\n\nconst SideImageWrapper = styled.div``;\n\nconst MessageWrapper = styled.div`\n  display: grid;\n  gap: 50px;\n`;\n\nconst Message = styled(H2)`\n  color: #fafafa;\n  text-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n`;\n\nconst ButtonWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 50px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport OvalBackground1 from \"../components/backgrounds/OvalBackground1\";\nimport SimpleRequestButton from \"../components/buttons/SimpleRequestButton\";\nimport { H2 } from \"../components/styles/TextStyles\";\n\nconst SuccessFeedback = () => {\n    return (\n        <Wrapper>\n            <OvalBackground1 />\n            <ContentWrapper>\n                <MessageWrapper>\n                    <Message>\n                        Thanks for your feedback! <br />\n                    </Message>\n                    <ButtonWrapper>\n                        <SimpleRequestButton\n                            title=\"Submit a new one\"\n                            to=\"/feedback\"\n                            src=\"/images/smallicons/pen.svg\"\n                        />\n                        <SimpleRequestButton\n                            title=\"Go to homepage\"\n                            to=\"/\"\n                            src=\"/images/smallicons/home.svg\"\n                        />\n                    </ButtonWrapper>\n                </MessageWrapper>\n                <SideImageWrapper></SideImageWrapper>\n            </ContentWrapper>\n        </Wrapper>\n    );\n};\n\nexport default SuccessFeedback;\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst ContentWrapper = styled.div`\n  position: absolute;\n  top: 100px;\n  display: grid;\n  grid-template-columns: 3fr 2fr;\n  margin: 100px;\n`;\n\nconst SideImageWrapper = styled.div``;\n\nconst MessageWrapper = styled.div`\n  display: grid;\n  gap: 50px;\n`;\n\nconst Message = styled(H2)`\n  color: #fafafa;\n  text-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n`;\n\nconst ButtonWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 50px;\n`;\n","import \"./App.css\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport MainForm from \"./features/form/MainForm\";\nimport React, { useState } from \"react\";\nimport Feedback from \"./features/form/Feedback\";\nimport Modify from \"./features/form/Modify\";\nimport Track from \"./features/form/Track\";\nimport CustomerInfo from \"./features/form/components/CustomerInfo\";\nimport HomePage from \"./Home\";\nimport ErrorSubmit from \"./pages/errorSubmit\";\nimport SuccessSubmit from \"./pages/successSubmit\";\nimport SuccessModify from \"./pages/successModify\";\nimport SuccessFeedback from \"./pages/successFeedback\";\n\nfunction App() {\n  const [part, setPart] = useState(1);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <div>\n            <HomePage />\n          </div>\n        </Route>\n        <Route path=\"/request\">\n          <MainForm part={part} setPart={setPart} />\n        </Route>\n        <Route path=\"/error\">Error</Route>\n        <Route path=\"/feedback\">\n          <Feedback />\n        </Route>\n        <Route path=\"/modify\">\n          <Modify />\n        </Route>\n        <Route path=\"/customer\">\n          <CustomerInfo part={part} />\n        </Route>\n        <Route path=\"/track\">\n          <Track />\n        </Route>\n        <Route path=\"/error-submit\">\n          <ErrorSubmit />\n        </Route>\n        <Route path=\"/success-submit\">\n          <SuccessSubmit />\n        </Route>\n        <Route path=\"/success-modify\">\n          <SuccessModify />\n        </Route>\n        <Route path=\"/success-feedback\">\n          <SuccessFeedback />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}